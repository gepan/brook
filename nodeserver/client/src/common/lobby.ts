//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// Generated from: lobby.proto
/// <reference path="common.ts" />
/// <reference path="lobby_room.ts" />

module Cmd {
	/**
	 * ---------------------------------大厅设置相关----------------------------//
	 *  设置类型
	 */
	export enum SetType {
		/**
		 * 音乐
		 */
		Music = 1,
		/**
		 * 音效
		 */
		Sound = 2,
		/**
		 * 排行榜(淘金类型的金币排行榜)
		 */
		Rank = 3
	}
	/**
	 * ---------------------------------免费金币界面任务系统相关----------------------------//
	 */
	export enum TaskStatus {
		/**
		 * 任务未开始
		 */
		Task_Status_Unstart = 0,
		/**
		 * 任务进行中
		 */
		Task_Status_Progress = 1,
		/**
		 * 已完成
		 */
		Task_Status_Complete = 2,
		/**
		 * 已领取奖励
		 */
		Task_Status_Received = 3
	}
	/**
	 * ****好友相关****
	 */
	export enum MsgType {
		/**
		 * 底部菜单-&gt;商城
		 */
		Shop = 1,
		/**
		 * 底部菜单-&gt;好友
		 */
		Friend = 2,
		/**
		 * 底部菜单-&gt;救济金
		 */
		Alms = 3,
		/**
		 * 底部菜单-&gt;活动
		 */
		Activity = 4,
		/**
		 * 底部菜单-&gt;任务
		 */
		DaysTask = 5,
		/**
		 * 底部菜单-&gt;更多
		 */
		More = 6,
		/**
		 * 底部菜单-&gt;摇钱树
		 */
		MoneyTree = 7,
		/**
		 * 底部菜单-&gt;商城-&gt;礼品屋
		 */
		GiftHouse = 100,
		/**
		 * 底部菜单-&gt;好友-&gt;好友消息
		 */
		FriendMsg = 200,
		/**
		 * 底部菜单-&gt;好友-&gt;好友请求
		 */
		FriendReq = 201,
		/**
		 * 底部菜单-&gt;救济金-&gt;领取救济金
		 */
		GetAlms = 300,
		/**
		 * 底部菜单-&gt;活动-&gt;每日签到
		 */
		Act_DaySign = 400,
		/**
		 * 底部菜单-&gt;活动-&gt;幸运翻翻翻
		 */
		Act_TurnCard = 401,
		/**
		 * 底部菜单-&gt;活动-&gt;幸运大转盘
		 */
		Act_TurnTable = 402,
		/**
		 * 底部菜单-&gt;任务-&gt;挑战任务
		 */
		Task_fight = 500,
		/**
		 * 底部菜单-&gt;任务-&gt;充值任务
		 */
		Task_TurnTable = 501,
		/**
		 * 底部菜单-&gt;任务-&gt;每日任务
		 */
		Task_EveryDay = 502,
		/**
		 * 底部菜单-&gt;任务-&gt;成就任务
		 */
		Task_Once = 503,
		/**
		 * 底部菜单-&gt;更多-&gt;公告
		 */
		Task_Notice = 600,
		/**
		 * 底部菜单-&gt;更多-&gt;魅力值
		 */
		Task_Charm = 601,
		/**
		 * 底部菜单-&gt;更多-&gt;邮件
		 */
		Task_NewMail = 602,
		/**
		 * 底部菜单-&gt;更多-&gt;vip
		 */
		Task_VIP = 603,
		/**
		 * 底部菜单-&gt;摇钱树-&gt;领取金币
		 */
		Task_MoneyTree = 701
	}
	/**
	 * 用户信息获取
	 */
	export class UserInfoGetLbyCmd_C {
		/**
		 * 用户ID,当为空时，说明是自己的信息
		 */
		uid: number;
		GetType(): string { return 'Cmd.UserInfoGetLbyCmd_C'; }
	}
	export class UserInfoGetLbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 仅当不存在时，返回错误描述
		 */
		desc: string;
		/**
		 * 用户基本信息
		 */
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.UserInfoGetLbyCmd_S'; }
	}
	/**
	 * 房间数据 用于请求信息同步时 检测玩家是否已经在某个房间中
	 */
	export class UserRoomInfo {
		/**
		 * 返回当前创建的房间号 所对应的游戏id
		 */
		gameId: number;
		/**
		 * 返回当前创建的房间号 所对应的游戏区id
		 */
		zoneId: number;
		/**
		 * 房间号
		 */
		roomId: number;
		/**
		 * 全局唯一的房间id
		 */
		globalRoomId: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * 场景 为匹配场则传
		 */
		scene: number;
		/**
		 * 该房间创建时为几人房 -- 牛牛人数不同ui不一致
		 */
		baseUserNbr: number;
		GetType(): string { return 'Cmd.UserRoomInfo'; }
	}
	/**
	 * 请求邀请明细列表
	 */
	export class InviteInfo {
		uid: number;
		parent: number;
		headUrl: string;
		nickName: string;
		playNum: number;
		inviteTime: number;
		GetType(): string { return 'Cmd.InviteInfo'; }
	}
	export class PointRankInfo {
		uid: number;
		nickName: string;
		headUrl: string;
		point: number;
		GetType(): string { return 'Cmd.PointRankInfo'; }
	}
	export class DayRankInfo {
		/**
		 * 玩家uid
		 */
		uid: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 头像
		 */
		headUrl: string;
		/**
		 * 具体数值
		 */
		point: number;
		/**
		 * nil为没有奖励 1有奖 2已领
		 */
		reward: number;
		GetType(): string { return 'Cmd.DayRankInfo'; }
	}
	/**
	 * 开房红包提现数据
	 */
	export class openRecord {
		/**
		 * 时间
		 */
		time: number;
		/**
		 * 兑换码
		 */
		CDKEY: string;
		/**
		 * 具体金额
		 */
		reward: number;
		/**
		 * 状态 1/2 未兑换／已兑换
		 */
		status: number;
		GetType(): string { return 'Cmd.openRecord'; }
	}
	/**
	 * 获得大厅类型
	 */
	export class LobbyTypeListLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * TableCreateConfigList的md5
		 */
		md5Code: string;
		/**
		 * 客户端版本信息
		 */
		bundle: string;
		/**
		 * 客户端代码md5
		 */
		md5Game: string;
		GetType(): string { return 'Cmd.LobbyTypeListLobbyCmd_C'; }
	}
	export class LobbyTypeListLobbyCmd_S {
		/**
		 * 大厅支持类型,西安用,为了建容百人厅和房卡厅
		 */
		lobbyTypeList: LobbyType[];
		GetType(): string { return 'Cmd.LobbyTypeListLobbyCmd_S'; }
	}
	/**
	 * 用户登陆
	 */
	export class UserInfoSynLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * TableCreateConfigList的md5
		 */
		md5Code: string;
		/**
		 * 客户端版本信息
		 */
		bundle: string;
		/**
		 * 客户端代码md5
		 */
		md5Game: string;
		/**
		 * 大厅类型,没有指定就是0
		 */
		lobbyType: number;
		GetType(): string { return 'Cmd.UserInfoSynLobbyCmd_C'; }
	}
	/**
	 * 创建房间表
	 */
	export class CreateConfigListLobbyCmd_S {
		list: string;
		GetType(): string { return 'Cmd.CreateConfigListLobbyCmd_S'; }
	}
	/**
	 * 大厅类型配置
	 */
	export class LobbyType {
		/**
		 * 大厅类型
		 */
		lobbyType: number;
		/**
		 * 房间类型RoomType
		 */
		roomType: number;
		/**
		 * 是否开启
		 */
		isOpen: number;
		GetType(): string { return 'Cmd.LobbyType'; }
	}
	/**
	 * 公告数据
	 */
	export class BroadInfo {
		/**
		 * 标题
		 */
		title: string;
		/**
		 * 内容
		 */
		content: string;
		GetType(): string { return 'Cmd.BroadInfo'; }
	}
	export class UserInfoSynLobbyCmd_S {
		resultCode: number;
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 当前是否已经创建了房间 (已改为 房间所有的玩家都可以返回房间了)
		 */
		isCreate: boolean;
		/**
		 * 玩家是否有可主动回去的房间
		 */
		userRoomInfos: UserRoomInfo;
		/**
		 * 是否为代理商
		 */
		canMarket: boolean;
		/**
		 * 是否显示免责声明 1则需要显示
		 */
		disclaimer: number;
		/**
		 * 当天还剩多少次获取分享奖励的次数 若为空表示当前活动不开启或当天已达到领取上限
		 */
		shareTimes: number;
		/**
		 * 1表示开启  活动结束时 该字段为空
		 */
		openSignIn: number;
		/**
		 * 当前第几天
		 */
		days: number;
		/**
		 * 是否可领取 1可领取 0不可领取
		 */
		canGet: number;
		/**
		 * 是否展示第一次进入的18个钻面板（贵州）1显示
		 */
		showFirst: number;
		/**
		 * 大厅默认公告
		 */
		defaultMsg: string;
		/**
		 * 是否开放积分排行榜 1开放
		 */
		showPointRank: number;
		/**
		 * 公告扣钻
		 */
		noticeFee: number;
		/**
		 * 累计充值钻石数
		 */
		recharge: number;
		/**
		 * 排行榜类型 不传代表当前不开放 2消耗排行榜 3开房次数排行榜
		 */
		rankType: number;
		/**
		 * 自动弹出老司机
		 */
		showRank: number;
		/**
		 * 是否显示开房红包
		 */
		openReward: number;
		/**
		 * 是否显示实名认证 0:不显示 1:显示
		 */
		authen: number;
		/**
		 * 自动弹出开房红包界面
		 */
		showReward: number;
		/**
		 * vip等级已经通过userinfo带回去了 所以打开vip界面不再多余请求了 这里直接带回 可领奖励
		 */
		vipReward: number[];
		/**
		 * 是否显示首充礼包 1 显示
		 */
		firstRecharge: number;
		/**
		 * 弹窗公告 如果不存在则表示不存弹窗公告
		 */
		popupBroad: BroadInfo;
		/**
		 * 是否显示限时优惠 1 显示
		 */
		limitOffer: number;
		/**
		 * 限时活动倒计时剩余时间 根据limitoOffer确定
		 */
		limitActTime: number;
		/**
		 * 最后一次进入的房间号,匹配号和茶馆用
		 */
		lastRoomId: number;
		/**
		 * 是否启用头像压缩
		 */
		isCompressHeadUrl: boolean;
		/**
		 * 启用头像压缩规则 如“  http:\/\/img.bwgame.com.cn\/img\/  ”
		 */
		CompressHeadUrlRule: string;
		/**
		 * 不填或者0表示弹默认窗,1表示新手引导,2表示三缺一加客服微信引导,
		 */
		firstPage: number;
		/**
		 * 1表示为代理
		 */
		isAgent: number;
		GetType(): string { return 'Cmd.UserInfoSynLobbyCmd_S'; }
	}
	/**
	 * 用户信息获取
	 */
	export class UserInfoGetLobbyCmd_C {
		/**
		 * 指定玩家uid
		 */
		uid: number;
		/**
		 * 是否需要获取有无房间归属
		 */
		getIsCreate: boolean;
		lobbyId: number;
		GetType(): string { return 'Cmd.UserInfoGetLobbyCmd_C'; }
	}
	export class UserInfoGetLobbyCmd_S {
		resultCode: number;
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 当前是否已经创建了房间 (已改为 房间所有的玩家都可以返回房间了)
		 */
		isCreate: boolean;
		/**
		 * 累计充值钻石数
		 */
		recharge: number;
		/**
		 * vip等级已经通过userinfo带回去了 所以打开vip界面不再多余请求了 这里直接带回 可领奖励
		 */
		vipReward: number[];
		/**
		 * 告知前端是否存在官方充值存在 绑定代理商返钻 1表示存在 -- 定义在这里 而不是在玩家请求信息同步那里的原因是 需要等代理商系统回调才能获取到该数据
		 */
		bindRechargeRet: number;
		GetType(): string { return 'Cmd.UserInfoGetLobbyCmd_S'; }
	}
	export class UserInfoModifyRequestLobyCmd_C {
		headUrl: string;
		nickName: string;
		gender: string;
		/**
		 * 修改个性签名
		 */
		signature: string;
		GetType(): string { return 'Cmd.UserInfoModifyRequestLobyCmd_C'; }
	}
	export class UserInfoModifyReturnLobyCmd_S {
		resultCode: number;
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.UserInfoModifyReturnLobyCmd_S'; }
	}
	/**
	 * 分享请求
	 */
	export class ShareLobbyCmd_C {
		/**
		 * 分享请求具体数据需要读表 所以后续需要传lobbyId
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.ShareLobbyCmd_C'; }
	}
	export class ShareLobbyCmd_S {
		resultCode: number;
		/**
		 * 活动时间内 每天第一次分享成功后 钻石余额
		 */
		remainder: number;
		/**
		 * 剩余次数
		 */
		shareTimes: number;
		GetType(): string { return 'Cmd.ShareLobbyCmd_S'; }
	}
	/**
	 * 进入修改上级代理界面(丹东需要显示一下）
	 */
	export class GetParentLobbyCmd_C {
		GetType(): string { return 'Cmd.GetParentLobbyCmd_C'; }
	}
	export class GetParentLobbyCmd_S {
		parent: number;
		GetType(): string { return 'Cmd.GetParentLobbyCmd_S'; }
	}
	/**
	 * 修改上级代理
	 */
	export class ChangeParentCmd_C {
		/**
		 * 上级代理
		 */
		parent: number;
		GetType(): string { return 'Cmd.ChangeParentCmd_C'; }
	}
	export class ChangeParentCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.ChangeParentCmd_S'; }
	}
	/**
	 * 已阅免责声明
	 */
	export class ReadDisclaimerLobbyCmd_C {
		GetType(): string { return 'Cmd.ReadDisclaimerLobbyCmd_C'; }
	}
	/**
	 * 已阅弹窗公告
	 */
	export class ReadPopubBroadLobbyCmd_C {
		GetType(): string { return 'Cmd.ReadPopubBroadLobbyCmd_C'; }
	}
	/**
	 * 获取自己的推广二维码
	 */
	export class GetExtendsion2DCodeCmd_C {
		GetType(): string { return 'Cmd.GetExtendsion2DCodeCmd_C'; }
	}
	export class GetExtendsion2DCodeCmd_S {
		codeUrl: string;
		GetType(): string { return 'Cmd.GetExtendsion2DCodeCmd_S'; }
	}
	/**
	 * 获取推广员数据
	 */
	export class GetInviteListCmd_CS {
		inviteList: InviteInfo[];
		codeUrl: string;
		inviteAllNum: number;
		playAllNum: number;
		myself: InviteInfo;
		/**
		 * 是否可以领取砖石
		 */
		canGet: number;
		/**
		 * 已领
		 */
		alreadyRecv: number;
		/**
		 * 待领
		 */
		notRecv: number;
		GetType(): string { return 'Cmd.GetInviteListCmd_CS'; }
	}
	/**
	 * 领取推广员奖励
	 */
	export class GetInviteRewardCmd_C {
		GetType(): string { return 'Cmd.GetInviteRewardCmd_C'; }
	}
	export class GetInviteRewardCmd_S {
		resultCode: number;
		/**
		 * 获取奖励后当前砖石余额
		 */
		diamond: number;
		alreadyRecv: number;
		notRecv: number;
		GetType(): string { return 'Cmd.GetInviteRewardCmd_S'; }
	}
	/**
	 * 领取签到奖励(麻将钻石场 正常签到领取钻石流程)
	 */
	export class GetRegisterRewardCmd_C {
		/**
		 * 大厅id 暂时只有贵州可领取
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetRegisterRewardCmd_C'; }
	}
	export class GetRegisterRewardCmd_S {
		resultCode: number;
		/**
		 * 获取奖励后当前砖石余额
		 */
		diamond: number;
		GetType(): string { return 'Cmd.GetRegisterRewardCmd_S'; }
	}
	/**
	 * 积分排行榜 （贵州）
	 */
	export class GetDayPointRankCmd_C {
		/**
		 * 1今天，2昨天
		 */
		day: number;
		GetType(): string { return 'Cmd.GetDayPointRankCmd_C'; }
	}
	/**
	 * 积分排行榜 （贵州）
	 */
	export class GetDayPointRankCmd_S {
		resultCode: number;
		/**
		 * 1今天，2昨天
		 */
		day: number;
		/**
		 * 排行数据
		 */
		infos: PointRankInfo[];
		GetType(): string { return 'Cmd.GetDayPointRankCmd_S'; }
	}
	/**
	 * 发送喇叭
	 */
	export class SendSuonaLobbyCmd_C {
		/**
		 * 内容
		 */
		content: string;
		GetType(): string { return 'Cmd.SendSuonaLobbyCmd_C'; }
	}
	export class SendSuonaLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.SendSuonaLobbyCmd_S'; }
	}
	/**
	 * 系统弹框消息,目前用来控制版本,其他地方也可以用
	 */
	export class MessageBoxLobbyCmd_S {
		/**
		 * 弹窗类型,1表示重启系统框
		 */
		type: number;
		/**
		 * 弹框内容
		 */
		desc: string;
		/**
		 * 标题
		 */
		title: string;
		/**
		 * 按钮,不填默认就是确定
		 */
		btn1: string;
		/**
		 * 按钮,不填就没有
		 */
		btn2: string;
		/**
		 * 按钮,不填就没有
		 */
		btn3: string;
		GetType(): string { return 'Cmd.MessageBoxLobbyCmd_S'; }
	}
	/**
	 * 钻石换房卡（江西客家）
	 */
	export class ExchangeCardByDiamondLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 兑换房卡数
		 */
		card: number;
		GetType(): string { return 'Cmd.ExchangeCardByDiamondLobbyCmd_C'; }
	}
	/**
	 * 钻石 房卡变动 都有专用的接口发送 但是存在冗余 钻石房卡同时变化时 都会推送个人信息刷新
	 */
	export class ExchangeCardByDiamondLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.ExchangeCardByDiamondLobbyCmd_S'; }
	}
	/**
	 * 进入房间前请求一下当前房间有谁在 (金华大厅)
	 */
	export class GetRoomUserLobbyCmd_C {
		/**
		 * 房间id
		 */
		roomId: number;
		GetType(): string { return 'Cmd.GetRoomUserLobbyCmd_C'; }
	}
	export class GetRoomUserLobbyCmd_S {
		/**
		 * 如果为空表示 正常返回 客户端读取desc数据进行显示
		 */
		resultCode: number;
		desc: string;
		/**
		 * 原样返回
		 */
		roomId: number;
		GetType(): string { return 'Cmd.GetRoomUserLobbyCmd_S'; }
	}
	/**
	 * 获取每日排行榜数据
	 */
	export class GetDayRankCmd_C {
		/**
		 * 1今天，2昨天
		 */
		day: number;
		/**
		 * 不传默认可兼容以前的1积分排行榜  2开房钻石消耗排行榜 3开房次数排行榜（暂未实现）
		 */
		type: number;
		/**
		 * 大厅id（兼容老的前端 默认不传时 默认奖励数据为{60,30,20,20,20}）
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetDayRankCmd_C'; }
	}
	export class GetDayRankCmd_S {
		resultCode: number;
		/**
		 * 1今天，2昨天
		 */
		day: number;
		/**
		 * 排行数据
		 */
		infos: DayRankInfo[];
		/**
		 * 玩家自身数据
		 */
		userInfo: DayRankInfo;
		GetType(): string { return 'Cmd.GetDayRankCmd_S'; }
	}
	/**
	 * 领取每日排行榜奖励
	 */
	export class GetDayRankRewardCmd_C {
		/**
		 * 2开房消耗排行榜奖励 3开房次数排行榜奖励（暂未实现）
		 */
		type: number;
		/**
		 * 大厅id （兼容老的前端 默认不传时 默认奖励数据为{60,30,20,20,20}）
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetDayRankRewardCmd_C'; }
	}
	export class GetDayRankRewardCmd_S {
		resultCode: number;
		/**
		 * 第几名
		 */
		rank: number;
		/**
		 * 获取奖励砖石
		 */
		diamond: number;
		GetType(): string { return 'Cmd.GetDayRankRewardCmd_S'; }
	}
	/**
	 * 处罚提示前端 1警告，2禁言，3自言自语，4关禁闭，5踢下线，6封号 暂时只处理了 5 6
	 */
	export class PunishUserCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.PunishUserCmd_S'; }
	}
	/**
	 * 取款请求
	 */
	export class BankWithdrawCmd_C {
		/**
		 * 取款数量
		 */
		num: number;
		/**
		 * 密码
		 */
		passwd: string;
		GetType(): string { return 'Cmd.BankWithdrawCmd_C'; }
	}
	/**
	 * 存款请求
	 */
	export class BankDepositCmd_C {
		/**
		 * 存款数量
		 */
		num: number;
		GetType(): string { return 'Cmd.BankDepositCmd_C'; }
	}
	/**
	 * 余款数量更新
	 */
	export class BankMoneyUpdate_S {
		/**
		 * 身上钱数
		 */
		bodyHave: number;
		/**
		 * 剩款
		 */
		bankHave: number;
		GetType(): string { return 'Cmd.BankMoneyUpdate_S'; }
	}
	/**
	 * 修改密码请求
	 */
	export class ChangePasswordCmd_C {
		/**
		 * 旧密码
		 */
		passwdOld: string;
		/**
		 * 新密码
		 */
		passwdNew: string;
		GetType(): string { return 'Cmd.ChangePasswordCmd_C'; }
	}
	/**
	 * -------------------------------------------------------------------------------------//
	 * 微信红包开始
	 * -------------------------------------------------------------------------------------//
	 *  查看当前微信红包奖励
	 */
	export class GetRedPackRewardInfoLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetRedPackRewardInfoLobbyCmd_C'; }
	}
	/**
	 * 返回当前微信红包奖励
	 */
	export class GetRedPackRewardInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 待提取金额
		 */
		num: number;
		/**
		 * 距离可提取还有多少
		 */
		distance: number;
		/**
		 * 剩余时间
		 */
		surplusTime: number;
		/**
		 * 今日开奖情况
		 */
		infos: RedPackInfo[];
		/**
		 * 活动开始时间(这两个时间传了 有没有用 前端自己决定)
		 */
		startTime: number;
		/**
		 * 活动结束时间
		 */
		endTime: number;
		GetType(): string { return 'Cmd.GetRedPackRewardInfoLobbyCmd_S'; }
	}
	/**
	 * 检测是否可提取微信红包到公众号
	 */
	export class CheckOpenRedPackLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.CheckOpenRedPackLobbyCmd_C'; }
	}
	export class CheckOpenRedPackLobbyCmd_S {
		/**
		 * 检测通过 该字段为nil
		 */
		resultCode: number;
		codeUrl: string;
		GetType(): string { return 'Cmd.CheckOpenRedPackLobbyCmd_S'; }
	}
	/**
	 * 提取微信红包到公众号
	 */
	export class OpenRedPackLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.OpenRedPackLobbyCmd_C'; }
	}
	/**
	 * 提取微信红包到公众号返回
	 */
	export class OpenRedPackLobbyCmd_S {
		resultCode: number;
		/**
		 * 剩余
		 */
		surplus: number;
		/**
		 * 当前提取数据
		 */
		info: openRecord;
		codeUrl: string;
		distance: number;
		GetType(): string { return 'Cmd.OpenRedPackLobbyCmd_S'; }
	}
	/**
	 * 查看提现详情
	 */
	export class GetOpenRedPackRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetOpenRedPackRecordLobbyCmd_C'; }
	}
	export class GetOpenRedPackRecordLobbyCmd_S {
		infos: openRecord[];
		GetType(): string { return 'Cmd.GetOpenRedPackRecordLobbyCmd_S'; }
	}
	/**
	 * 大厅下微信红包雨
	 */
	export class GrabRedPackLobbyCmd_Brd {
		/**
		 * 红包id
		 */
		packid: number;
		GetType(): string { return 'Cmd.GrabRedPackLobbyCmd_Brd'; }
	}
	/**
	 * 抢微信红包雨
	 */
	export class GetGrabRedPackLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 红包id
		 */
		packid: number;
		GetType(): string { return 'Cmd.GetGrabRedPackLobbyCmd_C'; }
	}
	/**
	 * 实名认证
	 */
	export class AuthenticationLobbyCmd_C {
		/**
		 * 姓名
		 */
		name: string;
		/**
		 * 身份证号码
		 */
		cardID: string;
		GetType(): string { return 'Cmd.AuthenticationLobbyCmd_C'; }
	}
	export class AuthenticationLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.AuthenticationLobbyCmd_S'; }
	}
	export class AuthenticationLobbyCmd_CS {
		/**
		 * 姓名
		 */
		name: string;
		/**
		 * 身份证号码
		 */
		cardID: string;
		/**
		 * 手机号
		 */
		mobilePhone: string;
		/**
		 * 支付宝账号
		 */
		alipay: string;
		/**
		 * 邀请码
		 */
		inviteCode: string;
		/**
		 * 添加、编辑， 0 获取
		 */
		typ: number;
		resultCode: number;
		GetType(): string { return 'Cmd.AuthenticationLobbyCmd_CS'; }
	}
	/**
	 * 比赛场报名
	 */
	export class EntryMatchLobbyCmd_C {
		lobbyId: number;
		/**
		 * 报名场次
		 */
		playId: number;
		GetType(): string { return 'Cmd.EntryMatchLobbyCmd_C'; }
	}
	export class EntryMatchLobbyCmd_S {
		resultCode: number;
		lobbyId: number;
		playId: number;
		/**
		 * 报名人数
		 */
		enrollment: number;
		/**
		 * 总需人数
		 */
		totalCount: number;
		GetType(): string { return 'Cmd.EntryMatchLobbyCmd_S'; }
	}
	/**
	 * 推送比赛场的报名人数给当前报名等待的人
	 */
	export class EntryMatchUserCountLobbyCmd_Brd {
		playId: number;
		/**
		 * 报名人数
		 */
		enrollment: number;
		/**
		 * 总需人数
		 */
		totalCount: number;
		GetType(): string { return 'Cmd.EntryMatchUserCountLobbyCmd_Brd'; }
	}
	/**
	 * 退赛
	 */
	export class QuitMatchLobbyCmd_C {
		lobbyId: number;
		playId: number;
		GetType(): string { return 'Cmd.QuitMatchLobbyCmd_C'; }
	}
	export class QuitMatchLobbyCmd_S {
		resultCode: number;
		enrollment: number;
		totalCount: number;
		GetType(): string { return 'Cmd.QuitMatchLobbyCmd_S'; }
	}
	/**
	 * 获取报名条件
	 */
	export class GetEnrollConditionLobbyCmd_C {
		playId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetEnrollConditionLobbyCmd_C'; }
	}
	export class GetEnrollConditionLobbyCmd_S {
		resultCode: number;
		/**
		 * 开始时间
		 */
		st: string;
		/**
		 * 结束时间
		 */
		et: string;
		enrollment: number;
		totalCount: number;
		/**
		 * 是否已经报名，前端用于判断报名界面的显示 1已报名  2未报名
		 */
		isEnroll: number;
		GetType(): string { return 'Cmd.GetEnrollConditionLobbyCmd_S'; }
	}
	/**
	 * 比赛场战绩与奖励
	 */
	export class MatchLotteryLobbyCmd_Brd {
		/**
		 * 战绩类型 1中途淘汰，2等待晋级，3比赛结束最终奖励
		 */
		rType: number;
		rank: number;
		round: number;
		point: number;
		GetType(): string { return 'Cmd.MatchLotteryLobbyCmd_Brd'; }
	}
	/**
	 * 等待晋级页面数据刷新
	 */
	export class WaitMatchPromotionInfoLobbyCmd_Brd {
		playId: number;
		/**
		 * 剩余晋级数量
		 */
		remainder: number;
		GetType(): string { return 'Cmd.WaitMatchPromotionInfoLobbyCmd_Brd'; }
	}
	/**
	 * 获取符合比赛场符合报名条件的人数
	 */
	export class JoinMatch {
		playId: number;
		userCount: number;
		/**
		 * 是否可点击
		 */
		click: boolean;
		GetType(): string { return 'Cmd.JoinMatch'; }
	}
	export class GetJoinMatchUserCountCmd_C {
		playIdSet: number[];
		GetType(): string { return 'Cmd.GetJoinMatchUserCountCmd_C'; }
	}
	export class GetJoinMatchUserCountCmd_S {
		resultCode: number;
		joinMatch: JoinMatch[];
		GetType(): string { return 'Cmd.GetJoinMatchUserCountCmd_S'; }
	}
	/**
	 * 比赛场异常补偿弹窗
	 */
	export class SendMatchAbnormalLobbyCmd_Brd {
		/**
		 * 赔偿信息
		 */
		compensation: string;
		GetType(): string { return 'Cmd.SendMatchAbnormalLobbyCmd_Brd'; }
	}
	/**
	 * 符合比赛场报名条件人的排行信息
	 */
	export class JoinMatchRank {
		nickname: string;
		/**
		 * 夺冠次数
		 */
		crownnum: number;
		GetType(): string { return 'Cmd.JoinMatchRank'; }
	}
	export class GetJoinMatchRankLobbyCmd_C {
		playId: number;
		GetType(): string { return 'Cmd.GetJoinMatchRankLobbyCmd_C'; }
	}
	export class GetJoinMatchRankLobbyCmd_S {
		joinMatchRank: JoinMatchRank[];
		/**
		 * 可报名多少人
		 */
		enrollment: number;
		/**
		 * 总需多少人
		 */
		totalCount: number;
		/**
		 * 当前时间
		 */
		curTime: string;
		GetType(): string { return 'Cmd.GetJoinMatchRankLobbyCmd_S'; }
	}
	/**
	 * 百人场 进入某个游戏
	 */
	export class EnterHundredGameLobbyCmd_C {
		gameId: number;
		/**
		 * 是否是体验场 1是
		 */
		isLearn: number;
		GetType(): string { return 'Cmd.EnterHundredGameLobbyCmd_C'; }
	}
	export class EnterHundredGameLobbyCmd_S {
		resultCode: number;
		gameId: number;
		zoneId: number;
		/**
		 * 是否是体验场 1是
		 */
		isLearn: number;
		GetType(): string { return 'Cmd.EnterHundredGameLobbyCmd_S'; }
	}
	/**
	 * -------------------------------------------------------------------------------------//
	 *  每日签到活动(麻将金币场引入的 二号签到流程 - -#)
	 * -------------------------------------------------------------------------------------//
	 */
	export class ContinueSignInfo {
		id: number;
		/**
		 * 连续领取天数
		 */
		continueDay: number;
		/**
		 * 是否已领取
		 */
		bReceived: boolean;
		/**
		 * 是否可领取
		 */
		bCouldReceive: boolean;
		GetType(): string { return 'Cmd.ContinueSignInfo'; }
	}
	/**
	 * 用户签到信息获取
	 */
	export class UserSignInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.UserSignInfoLobbyCmd_C'; }
	}
	export class UserSignInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 本周已签到日期(周一至周日 分别为 1 -- 7)
		 */
		signWeek: number[];
		/**
		 * 连续签到数据
		 */
		continue: ContinueSignInfo[];
		/**
		 * 今日是否已领取
		 */
		bTodayReceived: boolean;
		continueDay: number;
		/**
		 * 未领取的本周签到(周一至周日 分别为 1 -- 7) 空值表示没有未领取
		 */
		noSignWeek: number[];
		/**
		 * 当天可领取的每周签到(周一至周日 分别为 1 -- 7) 空值表示没有可领取
		 */
		signWeekDay: number;
		GetType(): string { return 'Cmd.UserSignInfoLobbyCmd_S'; }
	}
	/**
	 * 用户今日签到
	 */
	export class UserSignTodayLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.UserSignTodayLobbyCmd_C'; }
	}
	export class UserSignTodayLobbyCmd_S {
		resultCode: number;
		curWeek: number;
		GetType(): string { return 'Cmd.UserSignTodayLobbyCmd_S'; }
	}
	/**
	 * 用户领取累计签到奖励
	 */
	export class UserSignContinueLobbyCmd_C {
		lobbyId: number;
		/**
		 * 累计签到id
		 */
		continueSignId: number;
		GetType(): string { return 'Cmd.UserSignContinueLobbyCmd_C'; }
	}
	export class UserSignContinueLobbyCmd_S {
		resultCode: number;
		/**
		 * 累计签到id
		 */
		continueSignId: number;
		GetType(): string { return 'Cmd.UserSignContinueLobbyCmd_S'; }
	}
	/**
	 * -------------------------------------------------------------------------------------//
	 *  金币场排行榜(麻将金币场引入的 二号排行榜 跟麻将排行榜不混在一起 - -#)
	 * -------------------------------------------------------------------------------------//
	 */
	export class UserRankInfo {
		uid: number;
		headUrl: string;
		gender: string;
		nickName: string;
		signature: string;
		/**
		 * 玩家 总共筹码
		 */
		allChips: number;
		/**
		 * 玩家 当天赢取筹码
		 */
		winChips: number;
		/**
		 * 玩家 总充值
		 */
		allRecharge: number;
		/**
		 * 玩家 魅力 （暂时先不用就行了 不理它）
		 */
		charm: number;
		/**
		 * 玩家 自身排名
		 */
		rank: number;
		/**
		 * 玩家 vip等级
		 */
		vip: number;
		/**
		 * 玩家 魅力值
		 */
		userCp: number;
		/**
		 * 玩家 头衔
		 */
		title: string;
		/**
		 * 正在使用的个人形象 2017.11.15好彩真人需求
		 */
		personalImage: Cmd.PersonalImage[];
		GetType(): string { return 'Cmd.UserRankInfo'; }
	}
	/**
	 * 获取排行榜信息
	 */
	export class GetListRankCmd_C {
		/**
		 * 第几次请求 一次请求获取20个数据
		 */
		index: number;
		GetType(): string { return 'Cmd.GetListRankCmd_C'; }
	}
	/**
	 * 获取排行榜信息回复
	 */
	export class GetListRankCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 是否首次进入排行榜（如果在设置中设置过是否参加排行榜则 也算）
		 */
		isFirst: boolean;
		/**
		 * 金币排行榜
		 */
		allChipsRank: UserRankInfo[];
		/**
		 * 我的金币排行信息
		 */
		myAllChipsRank: UserRankInfo;
		/**
		 * 大赢家排行榜
		 */
		winChipsRank: UserRankInfo[];
		/**
		 * 我的大赢家排行信息
		 */
		myWinChipsRank: UserRankInfo;
		/**
		 * 充值排行榜
		 */
		allRechargeRankList: UserRankInfo[];
		/**
		 * 我的充值排行榜
		 */
		myAllRechargeRank: UserRankInfo;
		index: number;
		/**
		 * 昨日充值排行榜
		 */
		allYesterdayRechargeList: UserRankInfo[];
		/**
		 * 我的昨日充值排行榜
		 */
		myYesterdayRechargeRank: UserRankInfo;
		GetType(): string { return 'Cmd.GetListRankCmd_S'; }
	}
	/**
	 * 获取大赢家排行榜奖励
	 */
	export class GetWinChipsRankRewardCmd_C {
		GetType(): string { return 'Cmd.GetWinChipsRankRewardCmd_C'; }
	}
	/**
	 * 获取大赢家排行榜奖励回复
	 */
	export class GetWinChipsRankRewardCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 领取多少筹码
		 */
		chips: number;
		/**
		 * 当前剩余多少筹码
		 */
		remainder: number;
		GetType(): string { return 'Cmd.GetWinChipsRankRewardCmd_S'; }
	}
	/**
	 * 魅力值排行榜
	 */
	export class GetUserCpRankListLobbyCmd_C {
		GetType(): string { return 'Cmd.GetUserCpRankListLobbyCmd_C'; }
	}
	export class GetUserCpRankListLobbyCmd_S {
		allUserCpRank: UserRankInfo[];
		/**
		 * 自己的排名，为空则表示未上榜
		 */
		myRank: number;
		GetType(): string { return 'Cmd.GetUserCpRankListLobbyCmd_S'; }
	}
	/**
	 * 大厅设置
	 */
	export class GameSetLobbyCmd_C {
		/**
		 * 设置哪一项
		 */
		setType: SetType;
		/**
		 * 开 或 关
		 */
		status: boolean;
		GetType(): string { return 'Cmd.GameSetLobbyCmd_C'; }
	}
	export class GameSetLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GameSetLobbyCmd_S'; }
	}
	/**
	 * 获取当前设置
	 */
	export class GetGameSetLobbyCmd_C {
		GetType(): string { return 'Cmd.GetGameSetLobbyCmd_C'; }
	}
	export class GetGameSetLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 音乐设置
		 */
		music: boolean;
		/**
		 * 音效设置
		 */
		sound: boolean;
		/**
		 * 排行榜设置
		 */
		rank: boolean;
		GetType(): string { return 'Cmd.GetGameSetLobbyCmd_S'; }
	}
	/**
	 * 领取vip奖励
	 */
	export class GetVipRewardLobbyCmd_C {
		lobbyId: number;
		/**
		 * 领取制定档次
		 */
		level: number;
		GetType(): string { return 'Cmd.GetVipRewardLobbyCmd_C'; }
	}
	export class GetVipRewardLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 领取制定档次
		 */
		level: number;
		GetType(): string { return 'Cmd.GetVipRewardLobbyCmd_S'; }
	}
	/**
	 * ---------------------------------商城购买相关----------------------------//
	 */
	export class BuyGoodsLobbyCmd_C {
		shopId: number;
		shopNbr: number;
		GetType(): string { return 'Cmd.BuyGoodsLobbyCmd_C'; }
	}
	export class BuyGoodsLobbyCmd_S {
		resultCode: number;
		shopId: number;
		shopNbr: number;
		GetType(): string { return 'Cmd.BuyGoodsLobbyCmd_S'; }
	}
	export class TaskItem {
		/**
		 * 任务id
		 */
		taskId: number;
		/**
		 * 任务状态
		 */
		taskStatus: TaskStatus;
		/**
		 * 子任务已完成数量
		 */
		subTaskCompletedNbr: number;
		/**
		 * 子任务总数量
		 */
		subTaskAllNbr: number;
		GetType(): string { return 'Cmd.TaskItem'; }
	}
	export class RewardItem {
		/**
		 * 物品ID
		 */
		goodId: number;
		/**
		 * 物品数量
		 */
		goodNbr: number;
		GetType(): string { return 'Cmd.RewardItem'; }
	}
	export class DaysTaskItem {
		/**
		 * 任务id
		 */
		taskId: number;
		/**
		 * 任务状态
		 */
		taskStatus: TaskStatus;
		/**
		 * 当前完成进度
		 */
		current: number;
		/**
		 * 已领取次数
		 */
		recv: number;
		/**
		 * 剩余领取次数
		 */
		remainder: number;
		GetType(): string { return 'Cmd.DaysTaskItem'; }
	}
	/**
	 * 进入免费金币界面
	 */
	export class IntoFreeGoldLobbyCmd_C {
		GetType(): string { return 'Cmd.IntoFreeGoldLobbyCmd_C'; }
	}
	export class IntoFreeGoldLobbyCmd_S {
		resultCode: number;
		taskInfo: DaysTaskItem[];
		/**
		 * 引入金币场系统后 新增的 其他类型任务
		 */
		otherTaskInfo: DaysTaskItem[];
		/**
		 * 成就任务，属于一次性任务
		 */
		onceTaskInfo: DaysTaskItem[];
		GetType(): string { return 'Cmd.IntoFreeGoldLobbyCmd_S'; }
	}
	/**
	 * 领取指定任务奖励
	 */
	export class GetDaysTaskRewardLobbyCmd_C {
		taskId: number;
		GetType(): string { return 'Cmd.GetDaysTaskRewardLobbyCmd_C'; }
	}
	export class GetDaysTaskRewardLobbyCmd_S {
		resultCode: number;
		taskId: number;
		GetType(): string { return 'Cmd.GetDaysTaskRewardLobbyCmd_S'; }
	}
	/**
	 * 向前端发送破产补助弹窗
	 */
	export class SendBankruptcyLobbyCmd_Brd {
		/**
		 * 已经领取过多少次破产补助  总次数、金额等 前端自己读表
		 */
		bankruptcy: number;
		GetType(): string { return 'Cmd.SendBankruptcyLobbyCmd_Brd'; }
	}
	/**
	 * 游戏任务进度 例如：1/10
	 */
	export class GetGameTaskScheduleLobbyCmd_C {
		/**
		 * 游戏id
		 */
		gameId: number;
		GetType(): string { return 'Cmd.GetGameTaskScheduleLobbyCmd_C'; }
	}
	/**
	 * 每更新一次服务器会主动推送_S给客户端
	 */
	export class GetGameTaskScheduleLobbyCmd_S {
		resultCode: number;
		gameId: number;
		/**
		 * 前面的值 例如：1/10
		 */
		pre: number;
		/**
		 * 后面的值 例如：1/10
		 */
		back: number;
		/**
		 * 1为可领取状态，前端用来展示光圈 2为所有的任务奖励都已经领取
		 */
		receive: number;
		taskId: number;
		GetType(): string { return 'Cmd.GetGameTaskScheduleLobbyCmd_S'; }
	}
	/**
	 * 获取任务列表
	 */
	export class GetGameTaskListLobbyCmd_C {
		gameId: number;
		GetType(): string { return 'Cmd.GetGameTaskListLobbyCmd_C'; }
	}
	export class GetGameTaskListLobbyCmd_S {
		resultCode: number;
		gameId: number;
		gameTaskInfo: DaysTaskItem[];
		GetType(): string { return 'Cmd.GetGameTaskListLobbyCmd_S'; }
	}
	/**
	 * 领取指定游戏任务奖励
	 */
	export class GetGameTaskRewardLobbyCmd_C {
		taskId: number;
		gameId: number;
		GetType(): string { return 'Cmd.GetGameTaskRewardLobbyCmd_C'; }
	}
	export class GetGameTaskRewardLobbyCmd_S {
		resultCode: number;
		taskId: number;
		gameId: number;
		goods: Cmd.Goods[];
		/**
		 * 描述，三张大厅使用
		 */
		desc: string;
		GetType(): string { return 'Cmd.GetGameTaskRewardLobbyCmd_S'; }
	}
	/**
	 * 新金币场首充
	 */
	export class FirstRechargeInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.FirstRechargeInfoLobbyCmd_C'; }
	}
	/**
	 * 新金币场首充弹窗
	 */
	export class FirstRechargeInfoLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 商城id
		 */
		shopId: number;
		/**
		 * 是否可以领取 1 可以领取
		 */
		receive: number;
		GetType(): string { return 'Cmd.FirstRechargeInfoLobbyCmd_S'; }
	}
	/**
	 * 领取首充礼包
	 */
	export class FirstRecharge {
		/**
		 * 1 金币  2钻石  (暂时只有金币)
		 */
		awardType: number;
		/**
		 * 奖励数量
		 */
		awardNum: number;
		GetType(): string { return 'Cmd.FirstRecharge'; }
	}
	export class ReceiveFirstRechargeLobbyCmd_C {
		GetType(): string { return 'Cmd.ReceiveFirstRechargeLobbyCmd_C'; }
	}
	export class ReceiveFirstRechargeLobbyCmd_S {
		resultCode: number;
		award: FirstRecharge[];
		GetType(): string { return 'Cmd.ReceiveFirstRechargeLobbyCmd_S'; }
	}
	/**
	 * 限时优惠活动
	 */
	export class LimitOfferChipsLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.LimitOfferChipsLobbyCmd_C'; }
	}
	/**
	 * 限时优惠活动的弹窗
	 */
	export class LimitOfferChipsLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 对应的档位id
		 */
		limitId: number;
		/**
		 * 限时活动倒计时剩余时间
		 */
		limitActTime: number;
		GetType(): string { return 'Cmd.LimitOfferChipsLobbyCmd_S'; }
	}
	/**
	 * 兑换限时优惠的金币
	 */
	export class GetLimitOfferChipsLobbyCmd_C {
		/**
		 * 对应的档位id
		 */
		limitId: number;
		/**
		 * 对应的优惠id
		 */
		shopId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetLimitOfferChipsLobbyCmd_C'; }
	}
	export class GetLimitOfferChipsLobbyCmd_S {
		resultCode: number;
		shopId: number;
		GetType(): string { return 'Cmd.GetLimitOfferChipsLobbyCmd_S'; }
	}
	/**
	 * 幸运翻翻翻资格
	 */
	export class GetLuckTurnCardInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardInfoLobbyCmd_C'; }
	}
	export class GetLuckTurnCardInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 0拥有免费资格(免费抽奖) 1当前已使用(翻牌需要消耗货币) 2暂未拥有(不允许参与翻牌)
		 */
		freeTurn: number;
		/**
		 * 当前最大局数
		 */
		curRound: number;
		/**
		 * 免费条件的局数
		 */
		freeRound: number;
		/**
		 * 1免费 2钻石
		 */
		costType: number;
		/**
		 * 消耗钻石数量
		 */
		costNum: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardInfoLobbyCmd_S'; }
	}
	/**
	 * 幸运翻翻翻的翻牌结果
	 */
	export class GetLuckTurnCardResultLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardResultLobbyCmd_C'; }
	}
	export class GetLuckTurnCardResultLobbyCmd_S {
		resultCode: number;
		/**
		 * 1金币 2钻石
		 */
		awardType: number;
		/**
		 * 数量
		 */
		awardNum: number;
		/**
		 * 0拥有免费资格(免费抽奖) 1当前已使用(翻牌需要消耗货币) 2暂未拥有(不允许参与翻牌)
		 */
		freeTurn: number;
		/**
		 * 当前最大局数
		 */
		curRound: number;
		/**
		 * 免费条件的局数
		 */
		freeRound: number;
		/**
		 * 1免费 2钻石
		 */
		costType: number;
		/**
		 * 消耗钻石数量
		 */
		costNum: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardResultLobbyCmd_S'; }
	}
	/**
	 *  新版幸运翻翻翻
	 *  金币奖励集合
	 */
	export class RewardChips {
		/**
		 * chips只有在第一轮或者已领取的时候才会回给客户端
		 */
		chips: number;
		/**
		 * 是否是最大值 1是
		 */
		maxChips: number;
		/**
		 * 是否已领取 1是
		 */
		recv: number;
		/**
		 * 第几张牌
		 */
		index: number;
		GetType(): string { return 'Cmd.RewardChips'; }
	}
	/**
	 * 新版幸运翻翻翻主界面
	 */
	export class NewLuckTurnCardShowLobbyCmd_C {
		GetType(): string { return 'Cmd.NewLuckTurnCardShowLobbyCmd_C'; }
	}
	export class NewLuckTurnCardShowLobbyCmd_S {
		resultCode: number;
		/**
		 * 当前完成局数
		 */
		curRound: number;
		/**
		 * 总局数
		 */
		totalRound: number;
		/**
		 * 翻牌类型 1:免费 2:钻石 3:今天已结束,不可领
		 */
		costType: number;
		/**
		 * 消耗数量 只有用钻石的时候才存在
		 */
		costNum: number;
		/**
		 * 幸运翻翻翻的轮数
		 */
		luckRound: number;
		/**
		 * 金币奖励集合
		 */
		reward: RewardChips[];
		GetType(): string { return 'Cmd.NewLuckTurnCardShowLobbyCmd_S'; }
	}
	/**
	 * 新版幸运翻翻翻翻牌
	 */
	export class NewGetLuckTurnCardRewardLobbyCmd_C {
		/**
		 * 第几张牌
		 */
		index: number;
		GetType(): string { return 'Cmd.NewGetLuckTurnCardRewardLobbyCmd_C'; }
	}
	export class NewGetLuckTurnCardRewardLobbyCmd_S {
		resultCode: number;
		/**
		 * 获得的金币数
		 */
		rewardChips: number;
		/**
		 * 下面的用于刷新界面
		 * 当前完成局数
		 */
		curRound: number;
		/**
		 * 总局数
		 */
		totalRound: number;
		/**
		 * 翻牌类型 1:免费 2:钻石 3:今天已结束,不可领
		 */
		costType: number;
		/**
		 * 消耗数量 只有用钻石的时候才存在
		 */
		costNum: number;
		/**
		 * 幸运翻翻翻的轮数
		 */
		luckRound: number;
		/**
		 * 金币奖励集合
		 */
		reward: RewardChips[];
		GetType(): string { return 'Cmd.NewGetLuckTurnCardRewardLobbyCmd_S'; }
	}
	/**
	 * 好彩金币场的救济金
	 */
	export class GetReliefPayStatusLobbyCmd_C {
		GetType(): string { return 'Cmd.GetReliefPayStatusLobbyCmd_C'; }
	}
	export class GetReliefPayStatusLobbyCmd_S {
		resultCode: number;
		reliefPay: DaysTaskItem;
		GetType(): string { return 'Cmd.GetReliefPayStatusLobbyCmd_S'; }
	}
	/**
	 * 礼包码兑换功能
	 */
	export class UserGiftCodeLobbyCmd_C {
		giftCode: number;
		GetType(): string { return 'Cmd.UserGiftCodeLobbyCmd_C'; }
	}
	export class UserGiftCodeLobbyCmd_S {
		resultCode: number;
		items: RewardItem[];
		GetType(): string { return 'Cmd.UserGiftCodeLobbyCmd_S'; }
	}
	/**
	 * 好彩金币场快速开始按钮
	 */
	export class QuickStartGameLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.QuickStartGameLobbyCmd_C'; }
	}
	export class QuickStartGameLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.QuickStartGameLobbyCmd_S'; }
	}
	/**
	 * 进入绑定代理商界面 -- 福建新增 这个感觉跟存在自身的parent不是同一个
	 */
	export class IntoHigherAgentLobbyCmd_C {
		/**
		 * 绑定类型 默认为nil 兼容老版本短id  1表示当前请求得是上级代理的真实uid
		 */
		bindType: number;
		GetType(): string { return 'Cmd.IntoHigherAgentLobbyCmd_C'; }
	}
	export class IntoHigherAgentLobbyCmd_S {
		/**
		 * 查询结果 成功不返回 失败返回错误码
		 */
		resultCode: number;
		/**
		 * 有则传 无则为nil
		 */
		higherAgent: number;
		GetType(): string { return 'Cmd.IntoHigherAgentLobbyCmd_S'; }
	}
	/**
	 * 通过大厅向代理商系统 绑定上级代理(福建新增的一个绑定类型)
	 */
	export class EnquireBindAgent2LobbyCmd_C {
		higherAgent: number;
		/**
		 * 绑定类型 默认为nil 兼容老版本短id  1表示当前输入的上级id为上级玩家uid
		 */
		bindType: number;
		GetType(): string { return 'Cmd.EnquireBindAgent2LobbyCmd_C'; }
	}
	export class EnquireBindAgent2LobbyCmd_S {
		/**
		 * 查询结果 成功不返回 失败返回错误码
		 */
		resultCode: number;
		/**
		 * 绑定成功后 带回来
		 */
		higherAgent: number;
		GetType(): string { return 'Cmd.EnquireBindAgent2LobbyCmd_S'; }
	}
	/**
	 * zqb银行相关协议 不共用西安的
	 */
	export class AccessBankChipsLobbyCmd_C {
		lobbyId: number;
		/**
		 * 操作类型 1/2  存、取
		 */
		typ: number;
		/**
		 * 货币类型 1/2/3 金币、钻石、房卡
		 */
		chipsType: number;
		/**
		 * 数值
		 */
		num: number;
		/**
		 * 密码 暂时不需要密码 所以暂无密码修改设定等
		 */
		passwd: string;
		GetType(): string { return 'Cmd.AccessBankChipsLobbyCmd_C'; }
	}
	export class AccessBankChipsLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.AccessBankChipsLobbyCmd_S'; }
	}
	/**
	 * 修改用户信息(好彩真人有些信息需要特殊处理在这里重新定义下)
	 */
	export class UserInfoModifyLobbyCmd_C {
		/**
		 * 暂时只有昵称特殊处理,后续有其他的再添加
		 */
		nickName: string;
		GetType(): string { return 'Cmd.UserInfoModifyLobbyCmd_C'; }
	}
	export class UserInfoModifyLobbyCmd_S {
		resultCode: number;
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.UserInfoModifyLobbyCmd_S'; }
	}
	/**
	 * 申请添加好友
	 */
	export class AddFriendLobbyCmd_C {
		uid: number;
		GetType(): string { return 'Cmd.AddFriendLobbyCmd_C'; }
	}
	export class AddFriendLobbyCmd_S {
		/**
		 * optional UserBaseInfo 	userInfo   = 2; //好友信息
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.AddFriendLobbyCmd_S'; }
	}
	/**
	 * 删除好友
	 */
	export class RemoveFriendLobbyCmd_C {
		/**
		 * 好友ID
		 */
		uid: number;
		GetType(): string { return 'Cmd.RemoveFriendLobbyCmd_C'; }
	}
	export class RemoveFriendLobbyCmd_S {
		resultCode: number;
		/**
		 * 删除好友ID
		 */
		uid: number;
		GetType(): string { return 'Cmd.RemoveFriendLobbyCmd_S'; }
	}
	/**
	 * 获取好友列表
	 */
	export class GetFriendListLobbyCmd_C {
		/**
		 * 分页
		 */
		index: number;
		GetType(): string { return 'Cmd.GetFriendListLobbyCmd_C'; }
	}
	export class GetFriendListLobbyCmd_S {
		resultCode: number;
		/**
		 * 为空则表示没有数据
		 */
		friendList: Cmd.UserBaseInfo[];
		index: number;
		/**
		 * 好友数量
		 */
		friendNum: number;
		/**
		 * 可加好友总量
		 */
		totalNum: number;
		GetType(): string { return 'Cmd.GetFriendListLobbyCmd_S'; }
	}
	/**
	 * 好友申请列表
	 */
	export class GetFriendApplyListLobbyCmd_C {
		/**
		 * 分页
		 */
		index: number;
		GetType(): string { return 'Cmd.GetFriendApplyListLobbyCmd_C'; }
	}
	export class GetFriendApplyListLobbyCmd_S {
		resultCode: number;
		/**
		 * 为空则表示没有数据
		 */
		applyList: Cmd.UserBaseInfo[];
		index: number;
		GetType(): string { return 'Cmd.GetFriendApplyListLobbyCmd_S'; }
	}
	/**
	 * 同意，拒绝好友申请
	 */
	export class DealFriendApplyListLobbyCmd_C {
		/**
		 * 1:同意，2:拒绝，3:全部同意，4:全部拒绝
		 */
		type: number;
		uid: number;
		GetType(): string { return 'Cmd.DealFriendApplyListLobbyCmd_C'; }
	}
	export class DealFriendApplyListLobbyCmd_S {
		resultCode: number;
		type: number;
		uid: number;
		GetType(): string { return 'Cmd.DealFriendApplyListLobbyCmd_S'; }
	}
	/**
	 * 查找特定玩家(因为存在机器人的情况所有不能用UserInfoGetLobbyCmd_C UserInfoGetLobbyCmd_S的协议)
	 */
	export class SearchUserLobbyCmd_C {
		/**
		 * 玩家ID
		 */
		uid: number;
		/**
		 * 1 获取指定好友信息 2 获取好友信息和金币场战绩信息
		 */
		type: number;
		GetType(): string { return 'Cmd.SearchUserLobbyCmd_C'; }
	}
	export class SearchUserLobbyCmd_S {
		resultCode: number;
		/**
		 * 为空则表示玩家不存在
		 */
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 金币场战绩信息  //本来打算让前端自己去将userinfo带到具体的信息面板，前端不好处理，这里将根据type在重新返回下
		 */
		gameRecord: CoinGameRecord[];
		type: number;
		GetType(): string { return 'Cmd.SearchUserLobbyCmd_S'; }
	}
	/**
	 * 查找好友界面
	 */
	export class SearchFriendsListLobbyCmd_C {
		/**
		 * 刷新次数
		 */
		refurbish: number;
		GetType(): string { return 'Cmd.SearchFriendsListLobbyCmd_C'; }
	}
	export class SearchFriendsListLobbyCmd_S {
		/**
		 * 刷新次数
		 */
		refurbish: number;
		friendList: Cmd.UserBaseInfo[];
		GetType(): string { return 'Cmd.SearchFriendsListLobbyCmd_S'; }
	}
	/**
	 * 好友聊天
	 */
	export class FriendChatLobbyCmd_C {
		chatInfo: Cmd.ChatInfo;
		GetType(): string { return 'Cmd.FriendChatLobbyCmd_C'; }
	}
	/**
	 * 发送和接收者都用这一条消息推送
	 */
	export class FriendChatLobbyCmd_S {
		resultCode: number;
		chatInfo: Cmd.ChatInfo;
		GetType(): string { return 'Cmd.FriendChatLobbyCmd_S'; }
	}
	/**
	 * 消息红点功能
	 */
	export class RedPoint {
		msgType: MsgType;
		msgNum: number;
		GetType(): string { return 'Cmd.RedPoint'; }
	}
	export class ShowRedPointLobbyCmd_S {
		redPoint: RedPoint[];
		GetType(): string { return 'Cmd.ShowRedPointLobbyCmd_S'; }
	}
	/**
	 * 获取验证码
	 */
	export class GetIdentifyingCodeLobbyCmd_C {
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.GetIdentifyingCodeLobbyCmd_C'; }
	}
	export class GetIdentifyingCodeLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.GetIdentifyingCodeLobbyCmd_S'; }
	}
	/**
	 * 绑定手机
	 */
	export class BindingMobilePhoneLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		GetType(): string { return 'Cmd.BindingMobilePhoneLobbyCmd_C'; }
	}
	export class BindingMobilePhoneLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.BindingMobilePhoneLobbyCmd_S'; }
	}
	/**
	 * 获取红包信息
	 */
	export class GetRedPackInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetRedPackInfoLobbyCmd_C'; }
	}
	export class GetRedPackInfoLobbyCmd_S {
		/**
		 * 红包
		 */
		redpackSet: RedPack[];
		/**
		 * 剩余次数
		 */
		surplus: number;
		/**
		 * 1:手机号未绑定 2:未到开奖时间 3:活动已结束 4:次数已用完
		 */
		resultCode: number;
		/**
		 * 距离下一次领取的剩余时间
		 */
		surplustime: number;
		/**
		 * 活动时间
		 */
		activitytime: string;
		GetType(): string { return 'Cmd.GetRedPackInfoLobbyCmd_S'; }
	}
	/**
	 * 抢红包
	 */
	export class GrabRedPackLobbyCmd_C {
		/**
		 * 幸运词
		 */
		luckyword: string;
		GetType(): string { return 'Cmd.GrabRedPackLobbyCmd_C'; }
	}
	export class GrabRedPackLobbyCmd_S {
		/**
		 * 中奖红包
		 */
		redpack: RedPack;
		/**
		 * 剩余次数
		 */
		surplus: number;
		GetType(): string { return 'Cmd.GrabRedPackLobbyCmd_S'; }
	}
	/**
	 * 累计奖励
	 */
	export class GetMyRedPackRewardLobbyCmd_C {
		GetType(): string { return 'Cmd.GetMyRedPackRewardLobbyCmd_C'; }
	}
	export class GetMyRedPackRewardLobbyCmd_S {
		uid: number;
		/**
		 * 累计现金
		 */
		totalMoney: number;
		/**
		 * 累计金币
		 */
		totalChips: number;
		/**
		 * 奖励明细
		 */
		recordSet: RedPack[];
		/**
		 * 是否已兑换 1:已兑 0:未兑
		 */
		recv: number;
		GetType(): string { return 'Cmd.GetMyRedPackRewardLobbyCmd_S'; }
	}
	/**
	 * 兑换
	 */
	export class ExchangeRedPackLobbyCmd_C {
		/**
		 * 微信
		 */
		wechat: string;
		GetType(): string { return 'Cmd.ExchangeRedPackLobbyCmd_C'; }
	}
	export class ExchangeRedPackLobbyCmd_S {
		/**
		 * 1:活动未结束 2:没有现金红包 3:已兑换
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ExchangeRedPackLobbyCmd_S'; }
	}
	export class RedPack {
		/**
		 * 现金
		 */
		money: number;
		/**
		 * 金币
		 */
		chips: number;
		/**
		 * 日期
		 */
		date: string;
		GetType(): string { return 'Cmd.RedPack'; }
	}
	/**
	 * 获取金币场战绩(由于这个数据量的问题,不放在userBaseInfo里面，需要前端根据需求去自行请求)
	 */
	export class CoinGameRecord {
		gameId: number;
		/**
		 * 胜率
		 */
		winPercent: number;
		/**
		 * 总局数
		 */
		totalRound: number;
		/**
		 * 连胜局数
		 */
		winStreak: number;
		/**
		 * 单局最多赢取金币
		 */
		winChips: number;
		/**
		 * 单局最大输掉金币
		 */
		loseChips: number;
		GetType(): string { return 'Cmd.CoinGameRecord'; }
	}
	export class GetCoinGameRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetCoinGameRecordLobbyCmd_C'; }
	}
	export class GetCoinGameRecordLobbyCmd_S {
		gameRecord: CoinGameRecord[];
		GetType(): string { return 'Cmd.GetCoinGameRecordLobbyCmd_S'; }
	}
	/**
	 * 获取礼品券
	 */
	export class GetGiftVoucherLobbyCmd_C {
		GetType(): string { return 'Cmd.GetGiftVoucherLobbyCmd_C'; }
	}
	export class GetGiftVoucherLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 礼品券
		 */
		giftVoucher: number;
		GetType(): string { return 'Cmd.GetGiftVoucherLobbyCmd_S'; }
	}
	/**
	 * 兑换礼品券记录个人信息
	 */
	export class ExchangeGiftVoucherRecordUserInfoLobby_C {
		/**
		 * 真实姓名
		 */
		realName: string;
		/**
		 * 手机号码
		 */
		phoneNumber: string;
		/**
		 * 商品ID //2017.11.15之后的礼品券兑换实物就可以只传商品id
		 */
		shopId: number;
		GetType(): string { return 'Cmd.ExchangeGiftVoucherRecordUserInfoLobby_C'; }
	}
	export class ExchangeGiftVoucherRecordUserInfoLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ExchangeGiftVoucherRecordUserInfoLobby_S'; }
	}
	/**
	 * 获取收货地址
	 */
	export class GetShippingAddressLobby_C {
		GetType(): string { return 'Cmd.GetShippingAddressLobby_C'; }
	}
	export class GetShippingAddressLobby_S {
		resultCode: number;
		/**
		 * 邮寄地址
		 */
		addr: Cmd.DeliverAddr;
		GetType(): string { return 'Cmd.GetShippingAddressLobby_S'; }
	}
	/**
	 * 填写或修改收货地址
	 */
	export class ChangeShippingAddressLobby_C {
		/**
		 * 邮寄地址
		 */
		addr: Cmd.DeliverAddr;
		GetType(): string { return 'Cmd.ChangeShippingAddressLobby_C'; }
	}
	export class ChangeShippingAddressLobby_S {
		resultCode: number;
		/**
		 * 邮寄地址
		 */
		addr: Cmd.DeliverAddr;
		GetType(): string { return 'Cmd.ChangeShippingAddressLobby_S'; }
	}
	/**
	 * 请求转盘信息
	 */
	export class GetInfoTurnTableCmd_C {
		GetType(): string { return 'Cmd.GetInfoTurnTableCmd_C'; }
	}
	/**
	 * 转盘信息回复
	 */
	export class GetInfoTurnTableCmd_S {
		/**
		 * 回复
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 累计登录天数
		 */
		days: number;
		/**
		 * 今天已经转了几次了
		 */
		times: number;
		/**
		 * 当前身上还有多少礼品券
		 */
		giftVoucher: number;
		/**
		 * 今天是否已经开过宝箱
		 */
		isOpen: boolean;
		GetType(): string { return 'Cmd.GetInfoTurnTableCmd_S'; }
	}
	/**
	 * 转动转盘
	 */
	export class TurnTurnTableCmd_C {
		GetType(): string { return 'Cmd.TurnTurnTableCmd_C'; }
	}
	/**
	 * 转动转盘回复
	 */
	export class TurnTurnTableCmd_S {
		/**
		 * 回复
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 今天已经转了几次了
		 */
		times: number;
		/**
		 * 转中的哪一个
		 */
		turnId: number;
		/**
		 * 奖励翻倍
		 */
		multiple: number;
		/**
		 * 当前身上还有多少礼品券
		 */
		giftVoucher: number;
		/**
		 * 玩家获得的奖励
		 */
		rewardNum: number;
		/**
		 * 今天是否打开过宝箱
		 */
		isOpen: boolean;
		GetType(): string { return 'Cmd.TurnTurnTableCmd_S'; }
	}
	/**
	 * 领取神秘宝箱奖励
	 */
	export class GetCumulativeRewordTurnTableCmd_C {
		GetType(): string { return 'Cmd.GetCumulativeRewordTurnTableCmd_C'; }
	}
	/**
	 * 领取神秘宝箱奖励回复
	 */
	export class GetCumulativeRewordTurnTableCmd_S {
		/**
		 * 回复
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 抽中的哪一个
		 */
		getId: number;
		/**
		 * 获得的奖励
		 */
		rewardNum: number;
		GetType(): string { return 'Cmd.GetCumulativeRewordTurnTableCmd_S'; }
	}
	/**
	 * 好彩大厅VIP系统
	 */
	export class GetUserVipInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetUserVipInfoLobbyCmd_C'; }
	}
	export class GetUserVipInfoLobbyCmd_S {
		/**
		 * vip等级
		 */
		vipLevel: number;
		/**
		 * vip点数
		 */
		vipPoint: number;
		/**
		 * vip未领取奖励
		 */
		vipReward: number[];
		/**
		 * 回复
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GetUserVipInfoLobbyCmd_S'; }
	}
	/**
	 * 退出面板
	 */
	export class QuitGameInfo {
		/**
		 * 根据不同的type去取对应的数据
		 */
		type: QuitGameInfo.QuitType;
		/**
		 * 明日签到获取奖励
		 */
		signChips: number;
		/**
		 * 幸运翻翻翻剩余局数 和 costDiamond不同时存在
		 */
		turnRound: number;
		/**
		 * 幸运翻翻翻消耗钻石 和 round不同时存在
		 */
		turncostDiamond: number;
		/**
		 * 充值6/30 为空的话则表明6&amp;30任务都已经完成
		 */
		recharge: number;
		GetType(): string { return 'Cmd.QuitGameInfo'; }
	}
	export module QuitGameInfo {
		export enum QuitType {
			/**
			 * 幸运翻翻翻 turnRound/turncostDiamond
			 */
			TurnCard = 1,
			/**
			 * 每日签到 signChips
			 */
			DaySign = 2,
			/**
			 * 每日充值 recharge
			 */
			Recharge = 3
		}
	}
	export class QuitGameShowLobbyCmd_C {
		GetType(): string { return 'Cmd.QuitGameShowLobbyCmd_C'; }
	}
	export class QuitGameShowLobbyCmd_S {
		quitGameInfo: QuitGameInfo[];
		GetType(): string { return 'Cmd.QuitGameShowLobbyCmd_S'; }
	}
	/**
	 * 获取累计红包金额
	 */
	export class GetTotalRedPackMoneyLobbyCmd_C {
		GetType(): string { return 'Cmd.GetTotalRedPackMoneyLobbyCmd_C'; }
	}
	/**
	 * 当累计金额发生变化时，服务器会主动推送
	 */
	export class GetTotalRedPackMoneyLobbyCmd_S {
		totalMoney: number;
		GetType(): string { return 'Cmd.GetTotalRedPackMoneyLobbyCmd_S'; }
	}
	/**
	 * 新用户红包界面
	 */
	export class GetNewUserRedPackShowLobbyCmd_C {
		GetType(): string { return 'Cmd.GetNewUserRedPackShowLobbyCmd_C'; }
	}
	export class GetNewUserRedPackShowLobbyCmd_S {
		resultCode: number;
		/**
		 * 待领取红包集合[1,2,3,4,5,6,7]
		 */
		waitRecvSet: number[];
		/**
		 * 已领取红包集合[1,2,3,4,5,6,7]
		 */
		recvSet: number[];
		/**
		 * 已过期红包集合[1,2,3,4,5,6,7]
		 */
		timeOutSet: number[];
		/**
		 * 今天可领取天数
		 */
		bToday: number;
		GetType(): string { return 'Cmd.GetNewUserRedPackShowLobbyCmd_S'; }
	}
	/**
	 * 领取新手红包
	 */
	export class ExchangeNewUserRedPackLobbyCmd_C {
		recvDay: number;
		GetType(): string { return 'Cmd.ExchangeNewUserRedPackLobbyCmd_C'; }
	}
	export class ExchangeNewUserRedPackLobbyCmd_S {
		resultCode: number;
		/**
		 * 用于去更新界面数据
		 */
		recvDay: number;
		/**
		 * 现金
		 */
		cash: number;
		/**
		 * 话费券
		 */
		coupon: number;
		GetType(): string { return 'Cmd.ExchangeNewUserRedPackLobbyCmd_S'; }
	}
	/**
	 * 话费券兑换红包界面
	 */
	export class CCRedPack {
		id: number;
		/**
		 * 满足条件
		 */
		condition: number;
		/**
		 * 状态 0:未完成 1:可兑换 2:已兑换
		 */
		status: number;
		/**
		 * 现金
		 */
		cash: number;
		GetType(): string { return 'Cmd.CCRedPack'; }
	}
	export class GetCCRedPackShowLobbyCmd_C {
		GetType(): string { return 'Cmd.GetCCRedPackShowLobbyCmd_C'; }
	}
	export class GetCCRedPackShowLobbyCmd_S {
		resultCode: number;
		redPack: CCRedPack[];
		GetType(): string { return 'Cmd.GetCCRedPackShowLobbyCmd_S'; }
	}
	/**
	 * 话费券兑换红包
	 */
	export class ExchangeCCRedPackLobbyCmd_C {
		/**
		 * 兑换的id
		 */
		id: number;
		GetType(): string { return 'Cmd.ExchangeCCRedPackLobbyCmd_C'; }
	}
	export class ExchangeCCRedPackLobbyCmd_S {
		resultCode: number;
		/**
		 * 刷新各个红包状态
		 */
		redPack: CCRedPack[];
		GetType(): string { return 'Cmd.ExchangeCCRedPackLobbyCmd_S'; }
	}
	/**
	 * 返利红包(领取话费券)
	 */
	export class RechargeRedPack {
		id: number;
		/**
		 * 状态 0:未完成 1:可领取 2:已领取
		 */
		status: number;
		/**
		 * 满足条件
		 */
		condition: number;
		/**
		 * 话费券
		 */
		coupon: number;
		GetType(): string { return 'Cmd.RechargeRedPack'; }
	}
	/**
	 * 返利红包界面
	 */
	export class GetRechargeRedPackShowLobbyCmd_C {
		GetType(): string { return 'Cmd.GetRechargeRedPackShowLobbyCmd_C'; }
	}
	export class GetRechargeRedPackShowLobbyCmd_S {
		resultCode: number;
		redPack: RechargeRedPack[];
		GetType(): string { return 'Cmd.GetRechargeRedPackShowLobbyCmd_S'; }
	}
	/**
	 * 兑换返利红包
	 */
	export class ExchangeRechargeRedPackLobbyCmd_C {
		id: number;
		GetType(): string { return 'Cmd.ExchangeRechargeRedPackLobbyCmd_C'; }
	}
	export class ExchangeRechargeRedPackLobbyCmd_S {
		resultCode: number;
		/**
		 * 刷新界面
		 */
		redPack: RechargeRedPack[];
		GetType(): string { return 'Cmd.ExchangeRechargeRedPackLobbyCmd_S'; }
	}
	/**
	 * 红包提现
	 */
	export class RedPackInfo {
		/**
		 * 文字描述
		 */
		stringType: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 具体金额
		 */
		reward: number;
		money: number;
		/**
		 * 好彩红包获取方式  1新手红包 2话费券兑换
		 */
		typ: number;
		GetType(): string { return 'Cmd.RedPackInfo'; }
	}
	/**
	 * 玩家获得红包明细
	 */
	export class GetUserGetRedPackInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetUserGetRedPackInfoLobbyCmd_C'; }
	}
	export class GetUserGetRedPackInfoLobbyCmd_S {
		redPackInfo: RedPackInfo[];
		GetType(): string { return 'Cmd.GetUserGetRedPackInfoLobbyCmd_S'; }
	}
	/**
	 * 提现记录
	 */
	export class DrawCash {
		money: number;
		timestamp: number;
		/**
		 * 1:已兑换
		 */
		status: number;
		GetType(): string { return 'Cmd.DrawCash'; }
	}
	export class GetDrawCashRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetDrawCashRecordLobbyCmd_C'; }
	}
	export class GetDrawCashRecordLobbyCmd_S {
		resultCode: number;
		records: DrawCash[];
		GetType(): string { return 'Cmd.GetDrawCashRecordLobbyCmd_S'; }
	}
	/**
	 * 红包提现
	 */
	export class RedPackDrawCashLobbyCmd_C {
		GetType(): string { return 'Cmd.RedPackDrawCashLobbyCmd_C'; }
	}
	export class RedPackDrawCashLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.RedPackDrawCashLobbyCmd_S'; }
	}
	/**
	 * 获取拥有的所有时效性道具
	 */
	export class GetTimeGoodsLobbyCmd_C {
		/**
		 * 0获取所有 1头像框 2月卡周卡...
		 */
		timeType: number;
		GetType(): string { return 'Cmd.GetTimeGoodsLobbyCmd_C'; }
	}
	export class GetTimeGoodsLobbyCmd_S {
		resultCode: number;
		timeType: number;
		/**
		 * 玩家拥有的时效性道具
		 */
		timeGoods: Cmd.TimeGoods[];
		/**
		 * type为0/2存在 玩家累计待领取的时效性金币数量(周卡/月卡...)
		 */
		timeChips: number;
		GetType(): string { return 'Cmd.GetTimeGoodsLobbyCmd_S'; }
	}
	/**
	 * 领取累计待领取的时效性金币
	 */
	export class RevTimeChipsLobbyCmd_C {
		GetType(): string { return 'Cmd.RevTimeChipsLobbyCmd_C'; }
	}
	export class RevTimeChipsLobbyCmd_S {
		resultCode: number;
		/**
		 * chips为空则表示没有领取到金币
		 */
		chips: number;
		/**
		 * 如果道具数量跟有效时间发生变化则推送下面三条数据
		 */
		timeType: number;
		/**
		 * 玩家拥有的时效性道具
		 */
		timeGoods: Cmd.TimeGoods[];
		timeChips: number;
		GetType(): string { return 'Cmd.RevTimeChipsLobbyCmd_S'; }
	}
	/**
	 * 购买头像框，周卡/月卡等时效性道具(用钻石购买，不支持其他支付方式)
	 */
	export class BuyTimeGoodsLobbyCmd_C {
		timeType: number;
		goodsId: number;
		goodsNbr: number;
		GetType(): string { return 'Cmd.BuyTimeGoodsLobbyCmd_C'; }
	}
	export class BuyTimeGoodsLobbyCmd_S {
		resultCode: number;
		timeType: number;
		/**
		 * 玩家拥有的时效性道具
		 */
		timeGoods: Cmd.TimeGoods[];
		/**
		 * 玩家累计待领取的时效性金币数量(周卡/月卡...)
		 */
		timeChips: number;
		GetType(): string { return 'Cmd.BuyTimeGoodsLobbyCmd_S'; }
	}
	/**
	 * 个人形象道具的使用
	 */
	export class ChangePersonalImageLobbyCmd_C {
		personalImage: Cmd.PersonalImage;
		GetType(): string { return 'Cmd.ChangePersonalImageLobbyCmd_C'; }
	}
	export class ChangePersonalImageLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.ChangePersonalImageLobbyCmd_S'; }
	}
	/**
	 * 世界聊天
	 */
	export class WorldChatBySuonaLobbyCmd_C {
		content: string;
		GetType(): string { return 'Cmd.WorldChatBySuonaLobbyCmd_C'; }
	}
	export class WorldChatBySuonaLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.WorldChatBySuonaLobbyCmd_S'; }
	}
	/**
	 * 代理商发送喇叭
	 */
	export class AgentSendSuonaLobbyCmd_C {
		/**
		 * 喇叭消息
		 */
		msg: string;
		GetType(): string { return 'Cmd.AgentSendSuonaLobbyCmd_C'; }
	}
	export class AgentSendSuonaLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.AgentSendSuonaLobbyCmd_S'; }
	}
	/**
	 * 邮件附件
	 */
	export class Attachment {
		/**
		 * 附件商品id
		 */
		itemid: number;
		/**
		 * 对应的商品数量
		 */
		itemnum: number;
		GetType(): string { return 'Cmd.Attachment'; }
	}
	export class MailInfo {
		/**
		 * 该邮件id 期望是 每一个邮件会有一个唯一id
		 */
		id: number;
		/**
		 * 标题
		 */
		subject: string;
		/**
		 * 内容
		 */
		content: string;
		/**
		 * 钻石数
		 */
		diamond: number;
		/**
		 * 状态
		 */
		state: MailInfo.State;
		/**
		 * 时间戳
		 */
		stamp: number;
		/**
		 * 附件商品
		 */
		attachment: Attachment[];
		/**
		 * 发送者
		 */
		sendName: string;
		/**
		 * 兑奖码
		 */
		cdkey: string;
		/**
		 * 邮寄地址,兑奖码用
		 */
		addr: Cmd.DeliverAddr;
		GetType(): string { return 'Cmd.MailInfo'; }
	}
	export module MailInfo {
		export enum State {
			/**
			 * 未读
			 */
			UnRead = 1,
			/**
			 * 已读,但还有未领取的东西
			 */
			ReadHasItem = 2,
			/**
			 * 已读,且没有需要领取的东西
			 */
			ReadOver = 3
		}
	}
	/**
	 * 存在新邮件广播
	 */
	export class NewMailCmd_Brd {
		mail: MailInfo;
		GetType(): string { return 'Cmd.NewMailCmd_Brd'; }
	}
	/**
	 *  C-&gt;S 获取邮件列表请求
	 *  S-&gt;C 邮件列表更新
	 */
	export class GetListMailCmd_CS {
		/**
		 * 具体邮件
		 */
		mailList: MailInfo[];
		GetType(): string { return 'Cmd.GetListMailCmd_CS'; }
	}
	/**
	 *  C-&gt;S 查看指定邮件请求
	 *  S-&gt;C 查看完成指定邮件通知
	 */
	export class ReadMailCmd_CS {
		/**
		 * 查看指定邮件
		 */
		ids: number[];
		GetType(): string { return 'Cmd.ReadMailCmd_CS'; }
	}
	/**
	 *  C-&gt;S 获取邮件的东西请求
	 *  S-&gt;C 已获取邮件东西通知
	 */
	export class GetItemMailCmd_CS {
		ids: number[];
		/**
		 * 获取后得到的钻石数
		 */
		diamond: number;
		GetType(): string { return 'Cmd.GetItemMailCmd_CS'; }
	}
	/**
	 *  C-&gt;S 删除指定邮件请求
	 *  S-&gt;C 删除指定邮件通知
	 */
	export class DeleteMailCmd_CS {
		/**
		 * 删除指定邮件
		 */
		ids: number[];
		GetType(): string { return 'Cmd.DeleteMailCmd_CS'; }
	}
	/**
	 * 获取邮件列表
	 */
	export class GetListMailCmd_C {
		/**
		 * 分页
		 */
		index: number;
		/**
		 * 请求类型，1：初始化请求，2：刷新请求.默认为1
		 */
		type: number;
		GetType(): string { return 'Cmd.GetListMailCmd_C'; }
	}
	/**
	 * 获取邮件列表
	 */
	export class GetListMailCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 具体邮件：为空则表示没有邮件了，前端也不需要继续分页滑动
		 */
		mailInfo: MailInfo[];
		/**
		 * 分页
		 */
		index: number;
		/**
		 * 原样返回
		 */
		type: number;
		GetType(): string { return 'Cmd.GetListMailCmd_S'; }
	}
	/**
	 * 查看指定邮件
	 */
	export class ReadMailCmd_C {
		/**
		 * 查看指定邮件
		 */
		id: number;
		GetType(): string { return 'Cmd.ReadMailCmd_C'; }
	}
	/**
	 * 查看指定邮件
	 */
	export class ReadMailCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 具体邮件,前端刷新
		 */
		mailInfo: MailInfo;
		GetType(): string { return 'Cmd.ReadMailCmd_S'; }
	}
	/**
	 * 删除指定邮件
	 */
	export class DeleteMailCmd_C {
		/**
		 * 删除指定邮件
		 */
		ids: number[];
		GetType(): string { return 'Cmd.DeleteMailCmd_C'; }
	}
	/**
	 * 删除指定邮件
	 */
	export class DeleteMailCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 将删除指定邮件的id返回
		 */
		ids: number[];
		GetType(): string { return 'Cmd.DeleteMailCmd_S'; }
	}
	/**
	 * 领取指定邮件内的奖励
	 */
	export class GetMailRewardCmd_C {
		/**
		 * 邮件id
		 */
		id: number;
		GetType(): string { return 'Cmd.GetMailRewardCmd_C'; }
	}
	export class GetMailRewardCmd_S {
		resultCode: number;
		/**
		 * 具体邮件,前端刷新
		 */
		mailInfo: MailInfo;
		GetType(): string { return 'Cmd.GetMailRewardCmd_S'; }
	}
	/**
	 * 邮件批量操作
	 */
	export class BulkOperationMailCmd_C {
		/**
		 * 1 全部处理  2 全部删除
		 */
		opType: number;
		GetType(): string { return 'Cmd.BulkOperationMailCmd_C'; }
	}
	export class BulkOperationMailCmd_S {
		resultCode: number;
		opType: number;
		/**
		 * 附件商品
		 */
		attachment: Attachment[];
		GetType(): string { return 'Cmd.BulkOperationMailCmd_S'; }
	}
	/**
	 * 用户反馈功能
	 */
	export class UserFeedBackLobbyCmd_C {
		/**
		 * 反馈内容
		 */
		feedback: string;
		/**
		 * 图片url集合
		 */
		feedbackUrl: string[];
		lobbyId: number;
		GetType(): string { return 'Cmd.UserFeedBackLobbyCmd_C'; }
	}
	export class UserFeedBackLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.UserFeedBackLobbyCmd_S'; }
	}
	/**
	 * 修改鱼币
	 */
	export class UserFishcoinsChangeLobbyCmd_C {
		uid: number;
		/**
		 * 变化量
		 */
		change: number;
		GetType(): string { return 'Cmd.UserFishcoinsChangeLobbyCmd_C'; }
	}
	/**
	 * ClientErrorLogToServer
	 */
	export class ClientErrorLogToServerLobbyCmd_C {
		/**
		 * uid
		 */
		gameid: number;
		/**
		 * uid
		 */
		zoneid: number;
		/**
		 * 图片url集合
		 */
		log: string;
		GetType(): string { return 'Cmd.ClientErrorLogToServerLobbyCmd_C'; }
	}
	/**
	 * 申请提现
	 */
	export class CashWithdrawalLobbyCmd_C {
		/**
		 * 取现数额
		 */
		num: number;
		GetType(): string { return 'Cmd.CashWithdrawalLobbyCmd_C'; }
	}
	/**
	 * 提现回复
	 */
	export class CashWithdrawalLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.CashWithdrawalLobbyCmd_S'; }
	}
	/**
	 * 查看提现记录
	 */
	export class GetCashWithdrawalRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetCashWithdrawalRecordLobbyCmd_C'; }
	}
	export class CashWithdrawalRecord {
		time: number;
		num: number;
		/**
		 * 提现结果 0/1/2 处理中、成功、失败
		 */
		status: number;
		GetType(): string { return 'Cmd.CashWithdrawalRecord'; }
	}
	/**
	 * 提现记录回复
	 */
	export class GetCashWithdrawalRecordLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 记录
		 */
		records: CashWithdrawalRecord[];
		GetType(): string { return 'Cmd.GetCashWithdrawalRecordLobbyCmd_S'; }
	}
	/**
	 * 顺序弹窗
	 */
	export class SequentialPopupsLobbyCmd_S {
		/**
		 * 1红包乐翻天 2签到面板 3首充 4新手红包
		 */
		popId: number[];
		GetType(): string { return 'Cmd.SequentialPopupsLobbyCmd_S'; }
	}
	/**
	 * 运营活动 摇一摇
	 * 摇一摇结果数据
	 */
	export class ShakeShopInfo {
		/**
		 * 摇一摇对应的结果id
		 */
		shakeId: number;
		/**
		 * 倒计时时间
		 */
		remainderTime: number;
		/**
		 * 获得的金币总额
		 */
		totalChips: number;
		GetType(): string { return 'Cmd.ShakeShopInfo'; }
	}
	/**
	 * 打开摇一摇界面
	 */
	export class GetShakeBaseInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetShakeBaseInfoLobbyCmd_C'; }
	}
	export class GetShakeBaseInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 1:可以免费摇 2:需要消耗金币摇 3:摇过后选择购买界面 4:不可以摇一摇
		 */
		type: number;
		/**
		 * 剩余免费次数
		 */
		freeCount: number;
		/**
		 * 免费次数用完后需要消耗的金币数量
		 */
		costChips: number;
		shake: ShakeShopInfo;
		GetType(): string { return 'Cmd.GetShakeBaseInfoLobbyCmd_S'; }
	}
	/**
	 * 放弃摇一摇机会(再来一次)
	 */
	export class AbandonShakeLobbyCmd_C {
		GetType(): string { return 'Cmd.AbandonShakeLobbyCmd_C'; }
	}
	export class AbandonShakeLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.AbandonShakeLobbyCmd_S'; }
	}
	/**
	 * 获取摇一摇结果
	 */
	export class GetShakeResultLobbyCmd_C {
		GetType(): string { return 'Cmd.GetShakeResultLobbyCmd_C'; }
	}
	export class GetShakeResultLobbyCmd_S {
		resultCode: number;
		shake: ShakeShopInfo;
		GetType(): string { return 'Cmd.GetShakeResultLobbyCmd_S'; }
	}
	/**
	 * 三张大厅游客绑定账户, 获取验证码
	 */
	export class GetGuestBindAccountIdentifyCodeLobbyCmd_C {
		/**
		 * 手机号码
		 */
		phoneNumber: number;
		/**
		 * 修改手机号
		 */
		modifyPhone: boolean;
		/**
		 * 重置密码
		 */
		resetPasswd: boolean;
		GetType(): string { return 'Cmd.GetGuestBindAccountIdentifyCodeLobbyCmd_C'; }
	}
	export class GetGuestBindAccountIdentifyCodeLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GetGuestBindAccountIdentifyCodeLobbyCmd_S'; }
	}
	/**
	 * 三张大厅游客绑定账户
	 */
	export class GuestBindAccountLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		/**
		 * 密码
		 */
		password: string;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.GuestBindAccountLobbyCmd_C'; }
	}
	export class GuestBindAccountLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GuestBindAccountLobbyCmd_S'; }
	}
	/**
	 * 三张大厅校验手机验证码
	 */
	export class VerifyPhoneCodeLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.VerifyPhoneCodeLobbyCmd_C'; }
	}
	export class VerifyPhoneCodeLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.VerifyPhoneCodeLobbyCmd_S'; }
	}
	/**
	 * 三张大厅游客修改账户手机号
	 */
	export class GuestModifyAccountPhoneLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.GuestModifyAccountPhoneLobbyCmd_C'; }
	}
	export class GuestModifyAccountPhoneLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GuestModifyAccountPhoneLobbyCmd_S'; }
	}
	/**
	 * 三张大厅游客重置账户密码
	 */
	export class GuestResetAccountPasswdLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		/**
		 * 密码
		 */
		password: string;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.GuestResetAccountPasswdLobbyCmd_C'; }
	}
	export class GuestResetAccountPasswdLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GuestResetAccountPasswdLobbyCmd_S'; }
	}
	/**
	 * 玩家修改昵称, 成就任务
	 */
	export class ChangeUserNickName_C {
		/**
		 * 玩家昵称
		 */
		nickName: string;
		GetType(): string { return 'Cmd.ChangeUserNickName_C'; }
	}
	/**
	 * 修改昵称返回
	 */
	export class ChangeUserNickName_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 错误描述
		 */
		desc: string;
		/**
		 * 用户信息
		 */
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.ChangeUserNickName_S'; }
	}
	/**
	 * 玩家上传图像，成就任务
	 */
	export class ChangeUserHeadUrl_C {
		/**
		 * 玩家图像
		 */
		headUrl: string;
		GetType(): string { return 'Cmd.ChangeUserHeadUrl_C'; }
	}
	/**
	 * 上传图像返回
	 */
	export class ChangeUserHeadUrl_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 错误描述
		 */
		desc: string;
		/**
		 * 用户信息
		 */
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.ChangeUserHeadUrl_S'; }
	}
	/**
	 * 修改签名
	 */
	export class ChangeUserSignature_C {
		/**
		 * 签名
		 */
		signature: string;
		GetType(): string { return 'Cmd.ChangeUserSignature_C'; }
	}
	export class ChangeUserSignature_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 用户信息
		 */
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.ChangeUserSignature_S'; }
	}
	/**
	 * 赠送金币时查找玩家昵称
	 */
	export class GetUserNickNameLobby_C {
		/**
		 * 玩家ID
		 */
		uid: number;
		GetType(): string { return 'Cmd.GetUserNickNameLobby_C'; }
	}
	/**
	 * 查找昵称回复
	 */
	export class GetUserNickNameLobby_S {
		/**
		 * 昵称
		 */
		nickName: string;
		resultCode: number;
		desc: string;
		GetType(): string { return 'Cmd.GetUserNickNameLobby_S'; }
	}
	/**
	 * 赠送金币
	 */
	export class ExchangeCoinLobby_C {
		/**
		 * 赠送给其他玩家ID
		 */
		toUid: number;
		/**
		 * 赠送金币数量
		 */
		coin: number;
		/**
		 * 货币类型 1/2 钻石、金币 如果为nil 默认为2金币 兼容老代码
		 */
		coinType: number;
		/**
		 * 1:请求检查 2: 请求确认
		 */
		type: number;
		GetType(): string { return 'Cmd.ExchangeCoinLobby_C'; }
	}
	/**
	 * 赠送金币回复
	 */
	export class ExchangeCoinLobby_S {
		/**
		 * 错误码
		 */
		resultCode: number;
		/**
		 * 描述 ==
		 */
		desc: string;
		/**
		 * 检测时 返回玩家信息
		 */
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 赠送金币数量
		 */
		coin: number;
		/**
		 * 货币类型
		 */
		coinType: number;
		/**
		 * 1:请求检查 2: 请求确认
		 */
		type: number;
		GetType(): string { return 'Cmd.ExchangeCoinLobby_S'; }
	}
	/**
	 * 获取赠送金币记录
	 */
	export class GetExchangeCoinRecordLobby_C {
		/**
		 * 货币类型 1/2 钻石、金币 如果为nil 默认为2金币 兼容老代码
		 */
		coinType: number;
		/**
		 * 请求页数
		 */
		curPage: number;
		GetType(): string { return 'Cmd.GetExchangeCoinRecordLobby_C'; }
	}
	/**
	 * 赠送记录
	 */
	export class ExchangeCoinRecord {
		/**
		 * ID
		 */
		uid: number;
		/**
		 * 赠送金币数量
		 */
		coin: number;
		/**
		 * 赠送时间戳
		 */
		timestamp: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 1:给被人赠送 2:别人给自己赠送 ==
		 */
		type: number;
		GetType(): string { return 'Cmd.ExchangeCoinRecord'; }
	}
	/**
	 * 获取赠送金币记录返回
	 */
	export class GetExchangeCoinRecordLobby_S {
		/**
		 * 赠送记录
		 */
		record: ExchangeCoinRecord[];
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述 ==
		 */
		desc: number;
		/**
		 * 请求页数
		 */
		curPage: number;
		GetType(): string { return 'Cmd.GetExchangeCoinRecordLobby_S'; }
	}
	/**
	 * 获取摇钱树
	 */
	export class GetMoneyTreeDataLobby_C {
		GetType(): string { return 'Cmd.GetMoneyTreeDataLobby_C'; }
	}
	/**
	 * 获取摇钱树返回
	 */
	export class GetMoneyTreeDataLobby_S {
		/**
		 * 摇钱树的等级
		 */
		level: number;
		/**
		 * 生成金币数量
		 */
		produce: number;
		/**
		 * 是否可领取
		 */
		receive: number;
		GetType(): string { return 'Cmd.GetMoneyTreeDataLobby_S'; }
	}
	/**
	 * 领取摇钱树生成的金币
	 */
	export class GetMoneyTreeGoldLobby_C {
		GetType(): string { return 'Cmd.GetMoneyTreeGoldLobby_C'; }
	}
	/**
	 * 领取摇钱树金币返回
	 */
	export class GetMoneyTreeGoldLobby_S {
		/**
		 * 返回
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GetMoneyTreeGoldLobby_S'; }
	}
	/**
	 * 获取公告
	 */
	export class GetBroadcastInfoLobby_C {
		GetType(): string { return 'Cmd.GetBroadcastInfoLobby_C'; }
	}
	export class BroadCastInfo {
		/**
		 * 公告ID
		 */
		taskId: number;
		/**
		 * 公告标题
		 */
		title: string;
		/**
		 * 公告内容
		 */
		content: string;
		/**
		 * 公告简介
		 */
		desc: string;
		/**
		 * 公告状态
		 */
		state: BroadCastInfo.State;
		GetType(): string { return 'Cmd.BroadCastInfo'; }
	}
	export module BroadCastInfo {
		export enum State {
			/**
			 * 已读
			 */
			Read = 1,
			/**
			 * 未读
			 */
			UnRead = 2
		}
	}
	/**
	 * 获取公告返回
	 */
	export class GetBroadCastInfoLobby_S {
		/**
		 * 公告信息
		 */
		broad: BroadCastInfo[];
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetBroadCastInfoLobby_S'; }
	}
	/**
	 * 读取公告
	 */
	export class ReadBroadCastLobby_C {
		/**
		 * 公告ID
		 */
		taskId: number;
		GetType(): string { return 'Cmd.ReadBroadCastLobby_C'; }
	}
	/**
	 * 读取公告返回
	 */
	export class ReadBroadCastLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 公告内容
		 */
		content: string;
		/**
		 * 公告标题
		 */
		title: string;
		GetType(): string { return 'Cmd.ReadBroadCastLobby_S'; }
	}
	/**
	 * 大厅获取时时彩状态
	 */
	export class GetEveryColorStatusLobby_C {
		GetType(): string { return 'Cmd.GetEveryColorStatusLobby_C'; }
	}
	/**
	 * 大厅获取时时彩状态返回
	 */
	export class GetEveryColorStatusLobby_S {
		/**
		 * 状态 1:下注 2:结算
		 */
		status: number;
		/**
		 * 剩余时间
		 */
		time: number;
		GetType(): string { return 'Cmd.GetEveryColorStatusLobby_S'; }
	}
	/**
	 * 玩家下注
	 */
	export class UserBetChipsLobby_C {
		/**
		 * 下注id(1,2~8，从单到双...到豹子,1为单数，2位双数...)
		 */
		betId: number;
		/**
		 * 下注量
		 */
		chips: number;
		GetType(): string { return 'Cmd.UserBetChipsLobby_C'; }
	}
	/**
	 * 玩家下注返回
	 */
	export class UserBetChipsLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 所有下注信息
		 */
		allBetInfo: number[];
		/**
		 * 自己下注信息
		 */
		ownBetInfo: number[];
		GetType(): string { return 'Cmd.UserBetChipsLobby_S'; }
	}
	/**
	 * 玩家自动跟注
	 */
	export class UserAutoFollowLobby_C {
		/**
		 * 是否跟注
		 */
		follow: boolean;
		/**
		 * 跟注次数
		 */
		number: number;
		GetType(): string { return 'Cmd.UserAutoFollowLobby_C'; }
	}
	/**
	 * 玩家自动跟注返回
	 */
	export class UserAutoFollowLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 返回跟注次数
		 */
		number: number;
		GetType(): string { return 'Cmd.UserAutoFollowLobby_S'; }
	}
	/**
	 * 玩家是否可以自动跟注
	 */
	export class UserCanAutoFollowLobby_S {
		/**
		 * 是否跟注
		 */
		follow: boolean;
		GetType(): string { return 'Cmd.UserCanAutoFollowLobby_S'; }
	}
	/**
	 * 通知玩家赢金币
	 */
	export class NoticeUserWinChipsLobby_S {
		/**
		 * 玩家赢金币
		 */
		winChips: number;
		GetType(): string { return 'Cmd.NoticeUserWinChipsLobby_S'; }
	}
	/**
	 * 大厅获取时时彩信息
	 */
	export class GetEveryColorInfoLobby_C {
		GetType(): string { return 'Cmd.GetEveryColorInfoLobby_C'; }
	}
	/**
	 * 简易玩家信息
	 */
	export class ShortUserInfo {
		/**
		 * 玩家Id
		 */
		uid: number;
		/**
		 * 玩家昵称
		 */
		nickName: string;
		/**
		 * 玩家图像
		 */
		headUrl: string;
		/**
		 * 玩家vip等级
		 */
		vip: number;
		/**
		 * 玩家赢取金币
		 */
		winChips: number;
		GetType(): string { return 'Cmd.ShortUserInfo'; }
	}
	/**
	 * 大厅获取时时彩信息返回
	 */
	export class GetEveryColorInfoLobby_S {
		/**
		 * 奖池总额
		 */
		pond: number;
		/**
		 * 剩余时间
		 */
		remainderTime: number;
		/**
		 * 当前状态
		 */
		status: number;
		/**
		 * 上轮豹子时间
		 */
		leopardTime: number;
		/**
		 * 所有人下注信息
		 */
		allBetInfo: number[];
		/**
		 * 玩家自己下注信息
		 */
		ownBetInfo: number[];
		/**
		 * 牌型走势图
		 */
		cardTypeTrend: number[];
		/**
		 * 单双走势图
		 */
		singleDoubleTrend: number[];
		/**
		 * 结算开牌
		 */
		openOutCard: number[];
		/**
		 * 牌型
		 */
		openCardType: number;
		/**
		 * 单双
		 */
		singleDoubleType: number;
		/**
		 * 自动跟注
		 */
		autoFollow: boolean;
		/**
		 * 剩余跟注次数
		 */
		remainder: number;
		/**
		 * 上轮大赢家
		 */
		winner: ShortUserInfo;
		GetType(): string { return 'Cmd.GetEveryColorInfoLobby_S'; }
	}
	/**
	 * 大奖记录
	 */
	export class GetBigRewardRecordLobby_C {
		GetType(): string { return 'Cmd.GetBigRewardRecordLobby_C'; }
	}
	/**
	 * 记录信息
	 */
	export class RecordInfo {
		/**
		 * 记录时间
		 */
		timestamp: number;
		/**
		 * 玩家信息
		 */
		userInfo: ShortUserInfo;
		GetType(): string { return 'Cmd.RecordInfo'; }
	}
	/**
	 * 大奖记录返回
	 */
	export class GetBigRewardRecordLobby_S {
		/**
		 * 大奖记录
		 */
		record: RecordInfo[];
		GetType(): string { return 'Cmd.GetBigRewardRecordLobby_S'; }
	}
	/**
	 * 排行榜
	 */
	export class GetEveryColorRankInfoLobby_C {
		GetType(): string { return 'Cmd.GetEveryColorRankInfoLobby_C'; }
	}
	/**
	 * 玩家排行信息
	 */
	export class SscRankInfo {
		/**
		 * 排行
		 */
		rank: number;
		/**
		 * 玩家信息
		 */
		userInfo: ShortUserInfo;
		GetType(): string { return 'Cmd.SscRankInfo'; }
	}
	/**
	 * 玩家排行信息返回
	 */
	export class GetEveryColorRankInfoLobby_S {
		/**
		 * 所有排行
		 */
		allRankInfo: SscRankInfo[];
		/**
		 * 我的排行
		 */
		myRankInfo: SscRankInfo[];
		GetType(): string { return 'Cmd.GetEveryColorRankInfoLobby_S'; }
	}
	/**
	 * 时时彩下注量广播
	 */
	export class EveryColorBetChipsLobby_Brd {
		/**
		 * 所有下注信息
		 */
		allBetInfo: number[];
		GetType(): string { return 'Cmd.EveryColorBetChipsLobby_Brd'; }
	}
	/**
	 * 时时彩下注状态广播
	 */
	export class EveryColorBetStatusLobby_Brd {
		/**
		 * 状态 1 下注 2 结算
		 */
		status: number;
		/**
		 * 每个状态所需时间
		 */
		time: number;
		GetType(): string { return 'Cmd.EveryColorBetStatusLobby_Brd'; }
	}
	/**
	 * 时时彩结算状态广播
	 */
	export class EveryColorLotteryStatusLobby_Brd {
		/**
		 * 状态 1 下注 2 结算
		 */
		status: number;
		/**
		 * 每个状态所需时间
		 */
		time: number;
		/**
		 * 牌型
		 */
		openCardType: number;
		/**
		 * 单双
		 */
		singleDoubleType: number;
		/**
		 * 结算时发牌
		 */
		openOutCard: number[];
		/**
		 * 奖池金额
		 */
		pond: number;
		/**
		 * 上轮豹子时间
		 */
		leopardTime: number;
		/**
		 * 上轮大赢家
		 */
		winner: ShortUserInfo;
		GetType(): string { return 'Cmd.EveryColorLotteryStatusLobby_Brd'; }
	}
	/**
	 * 登陆天数信息
	 */
	export class ContinueDay {
		/**
		 * 登陆天数
		 */
		day: number;
		/**
		 * 状态 1 未领取 2 已领取 3 已失效
		 */
		status: number;
		/**
		 * 奖励金币
		 */
		coin: RewardItem[];
		GetType(): string { return 'Cmd.ContinueDay'; }
	}
	/**
	 * 玩家连续登陆信息
	 */
	export class ContinueLoginDaysInfoLobby_S {
		/**
		 * 登陆天数信息
		 */
		continue: ContinueDay[];
		GetType(): string { return 'Cmd.ContinueLoginDaysInfoLobby_S'; }
	}
	/**
	 * 领取连续登陆天数奖励
	 */
	export class GetContinueLoginDaysRewardLobby_C {
		GetType(): string { return 'Cmd.GetContinueLoginDaysRewardLobby_C'; }
	}
	/**
	 * 领取连续登陆奖励返回
	 */
	export class GetContinueLoginDaysRewardLobby_S {
		/**
		 * 奖励
		 */
		reward: ContinueDay;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetContinueLoginDaysRewardLobby_S'; }
	}
	/**
	 * 取消领取登陆奖励
	 */
	export class CancelGetContinueDayRewardLobby_C {
		GetType(): string { return 'Cmd.CancelGetContinueDayRewardLobby_C'; }
	}
	/**
	 * 取消返回
	 */
	export class CancelGetContinueDayRewardLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.CancelGetContinueDayRewardLobby_S'; }
	}
	/**
	 * 获取标准场和百人场人数
	 */
	export class GetGameCurrentPlayerNumberLobby_C {
		GetType(): string { return 'Cmd.GetGameCurrentPlayerNumberLobby_C'; }
	}
	/**
	 * 获取人数返回
	 */
	export class GetGameCurrentPlayerNumberLobby_S {
		/**
		 * 标准场
		 */
		stand: number;
		/**
		 * 百人场
		 */
		hundred: number;
		/**
		 * 各场次人数
		 */
		scene: number[];
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetGameCurrentPlayerNumberLobby_S'; }
	}
	/**
	 * 三张大厅的非顺序弹窗
	 */
	export class PushPopUpWindowsLobby_S {
		/**
		 * 弹窗类型 1 账户创建 2 未读公告
		 */
		type: number;
		/**
		 * 账户创建金币数量
		 */
		chips: number;
		/**
		 * 未读公告则附带上公告Id
		 */
		broadId: number;
		GetType(): string { return 'Cmd.PushPopUpWindowsLobby_S'; }
	}
	/**
	 * 简单推送
	 */
	export class IsSimpleAgentLobby_S {
		/**
		 * 0/1 否、是
		 */
		state: number;
		GetType(): string { return 'Cmd.IsSimpleAgentLobby_S'; }
	}
	/**
	 * ---------------------------------积分商城购买----------------------------//
	 *  获取积分商城物品列表
	 */
	export class ShopPointListLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.ShopPointListLobbyCmd_C'; }
	}
	/**
	 * 积分商城物品列表
	 */
	export class ShopPointItem {
		/**
		 * 物品ID
		 */
		id: number;
		/**
		 * 商品名称
		 */
		name: string;
		icon: number;
		/**
		 * 1表示钻石,2表示积分
		 */
		moneyType: number;
		/**
		 * 花费
		 */
		cost: number;
		/**
		 * 数量
		 */
		number: number;
		/**
		 * 是否显示,(购买)
		 */
		open: number;
		/**
		 * 显示栏目
		 */
		displayColumn: number[];
		/**
		 * 上市日期,仅供客户端展示
		 */
		Date: string;
		/**
		 * 抽奖类型1表示钻石,2表示积分
		 */
		luckyType: number;
		/**
		 * 抽奖消耗
		 */
		luckyCost: number;
		/**
		 * 抽奖获得概率
		 */
		luckyProb: number;
		GetType(): string { return 'Cmd.ShopPointItem'; }
	}
	/**
	 * 返回积分商城物品列表
	 */
	export class ShopPointListLobbyCmd_S {
		/**
		 * 商品列表
		 */
		list: ShopPointItem[];
		GetType(): string { return 'Cmd.ShopPointListLobbyCmd_S'; }
	}
	/**
	 * 购买一个积分商品
	 */
	export class BuyShopPointItemLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * 物品ID
		 */
		goodId: number;
		GetType(): string { return 'Cmd.BuyShopPointItemLobbyCmd_C'; }
	}
	/**
	 * 抽奖结果
	 */
	export class LuckShopPointItemLobbyCmd_CS {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * 抽奖类型1表示钻石,2表示积分
		 */
		luckyType: number;
		/**
		 * 物品ID,下行用
		 */
		goodId: number;
		GetType(): string { return 'Cmd.LuckShopPointItemLobbyCmd_CS'; }
	}
	/**
	 * 获取抽奖结果
	 */
	export class GetLuckShopPointItemLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * 抽奖类型1表示钻石,2表示积分
		 */
		luckyType: number;
		GetType(): string { return 'Cmd.GetLuckShopPointItemLobbyCmd_C'; }
	}
	/**
	 * ---------------------------------商城兑换码----------------------------//
	 *  请求兑换一个商品
	 */
	export class RedeemItemShopPointLobbyCmd_C {
		/**
		 * 邮寄地址
		 */
		addr: Cmd.DeliverAddr;
		/**
		 * 兑换码
		 */
		cdkey: string;
		GetType(): string { return 'Cmd.RedeemItemShopPointLobbyCmd_C'; }
	}
}
