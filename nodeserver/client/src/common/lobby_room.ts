//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// Generated from: lobby_room.proto
/// <reference path="common.ts" />

module Cmd {
	export enum MatchGroupType {
		MatchGroupType_None = 0,
		MatchGroupType_TaoTai = 1
	}
	/**
	 * 请求当前正常运营的游戏列表
	 */
	export class GetNormalGameListRoomCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 1/2/3 普通场、练习场、匹配场  默认为1 兼容以前模式
		 */
		typ: number;
		GetType(): string { return 'Cmd.GetNormalGameListRoomCmd_C'; }
	}
	export class GetNormalGameListRoomCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 1/2/3 普通场、练习场、匹配场  默认为1 兼容以前模式
		 */
		typ: number;
		/**
		 * 正常前端可选择的游戏列表id
		 */
		gameIdList: number[];
		/**
		 * 上次创建数据
		 */
		lastCreate: CreateRoomCmd_C;
		/**
		 * 免费开始时间 如果该字段不为Nil则代表当前处于免费时间内
		 */
		startTime: number;
		/**
		 * 免费结束时间
		 */
		endTime: number;
		GetType(): string { return 'Cmd.GetNormalGameListRoomCmd_S'; }
	}
	/**
	 * 获取当前练习场
	 */
	export class GetPracticeGameInfoRoomCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 暂时由服务器默认分配第一个的话 这里不传
		 */
		gameId: number;
		/**
		 * 初中高 1/2/3
		 */
		level: number;
		GetType(): string { return 'Cmd.GetPracticeGameInfoRoomCmd_C'; }
	}
	export class GetPracticeGameInfoRoomCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 游戏id
		 */
		gameId: number;
		/**
		 * 区id
		 */
		zoneId: number;
		GetType(): string { return 'Cmd.GetPracticeGameInfoRoomCmd_S'; }
	}
	/**
	 * 创建房间
	 */
	export class CreateRoomCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 返回当前创建的房间号 所对应的游戏id
		 */
		gameId: number;
		/**
		 * 当前房间创建局数
		 */
		gameNbr: number;
		/**
		 * 玩法
		 */
		playType: number;
		/**
		 * 房间模式  二人、四人
		 */
		userNbr: number;
		/**
		 * 房间支付类型
		 */
		payType: number;
		/**
		 * 峰值
		 */
		multiplePeak: number;
		/**
		 * 出牌时间
		 */
		outTime: number;
		/**
		 * 房主小费
		 */
		hostTip: number;
		/**
		 * 大厅不校验的数据,给游戏校验
		 */
		props: number[];
		/**
		 * 当前正常开始 是否存在对赌
		 */
		gamble: number;
		/**
		 * 对赌类型 1/2 金币/钻石 默认不传为赌金币
		 */
		gambleType: number;
		/**
		 * 输赢上限  (好彩真人金币场)
		 */
		winLimit: number;
		/**
		 * 加倍起番  (好彩真人金币场)
		 */
		ratio: number;
		/**
		 * 底分
		 */
		basePoint: number;
		GetType(): string { return 'Cmd.CreateRoomCmd_C'; }
	}
	export class CreateRoomCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 返回当前创建的房间号 所对应的游戏id
		 */
		gameId: number;
		/**
		 * 区id
		 */
		zoneId: number;
		/**
		 * 全局唯一的房间id
		 */
		globalRoomId: number;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * gameGatewayUrl,尽量让玩家跟房主一个url,防止被攻击
		 */
		url: string;
		/**
		 * 如果不为空表示为匹配场
		 */
		scene: number;
		/**
		 * 不进入游戏
		 */
		notIntoGame: number;
		/**
		 * 该房间创建时为几人房 -- 牛牛人数不同ui不一致
		 */
		baseUserNbr: number;
		GetType(): string { return 'Cmd.CreateRoomCmd_S'; }
	}
	/**
	 * 请求踢人
	 */
	export class KickLeaveRoomCmd_C {
		uid: number;
		/**
		 * 房间id
		 */
		roomId: number;
		GetType(): string { return 'Cmd.KickLeaveRoomCmd_C'; }
	}
	/**
	 * 请求解散房间
	 */
	export class ActiveDissolveRoomCmd_C {
		/**
		 * 房间id
		 */
		roomId: number;
		GetType(): string { return 'Cmd.ActiveDissolveRoomCmd_C'; }
	}
	/**
	 * 查看正在进行中的房间(多开房间用)
	 */
	export class ActiveCreateRoomCmd_C {
		GetType(): string { return 'Cmd.ActiveCreateRoomCmd_C'; }
	}
	export class ActiveCreateRoomCmd_S {
		/**
		 * 本匹配号所产生的所有房间号
		 */
		roomList: MathGroupRoomInfo[];
		GetType(): string { return 'Cmd.ActiveCreateRoomCmd_S'; }
	}
	export class ActiveDetailRoomCmd_C {
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * globalRoomId
		 */
		gid: number;
		GetType(): string { return 'Cmd.ActiveDetailRoomCmd_C'; }
	}
	export class ActiveDetailRoomCmd_S {
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * globalRoomId
		 */
		gid: number;
		/**
		 * 不填或0表示准备中,1表示已开局
		 */
		state: number;
		/**
		 * 成员信息
		 */
		list: MatchGroupMemberInfo[];
		GetType(): string { return 'Cmd.ActiveDetailRoomCmd_S'; }
	}
	/**
	 * 返回房间
	 */
	export class ReturnRoomCmd_C {
		/**
		 * 返回房间需要带上lobbyId
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.ReturnRoomCmd_C'; }
	}
	export class ReturnRoomCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 返回当前创建的房间号 所对应的游戏id
		 */
		gameId: number;
		/**
		 * 区id
		 */
		zoneId: number;
		/**
		 * 全局唯一的房间id
		 */
		globalRoomId: number;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * gameGatewayUrl,尽量让玩家跟房主一个url,防止被攻击
		 */
		url: string;
		/**
		 * 房间类型RoomType
		 */
		roomType: number;
		/**
		 * 如果不为空表示为匹配场
		 */
		scene: number;
		/**
		 * 该房间创建时为几人房 -- 牛牛人数不同ui不一致
		 */
		baseUserNbr: number;
		GetType(): string { return 'Cmd.ReturnRoomCmd_S'; }
	}
	/**
	 * 加入房间
	 */
	export class EnterRoomCmd_C {
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 進入房间需要带上lobbyId（指定房間id可能不是該大廳的）
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.EnterRoomCmd_C'; }
	}
	export class EnterRoomCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 返回当前创建的房间号 所对应的游戏id
		 */
		gameId: number;
		/**
		 * 区id
		 */
		zoneId: number;
		/**
		 * 全局唯一的房间id
		 */
		globalRoomId: number;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * gameGatewayUrl,尽量让玩家跟房主一个url,防止被攻击
		 */
		url: string;
		/**
		 * 如果不为空表示为匹配场
		 */
		scene: number;
		roomState: Cmd.RoomState;
		/**
		 * 该房间创建时为几人房 -- 牛牛人数不同ui不一致
		 */
		baseUserNbr: number;
		GetType(): string { return 'Cmd.EnterRoomCmd_S'; }
	}
	/**
	 * 房间解散时 由大厅统一推条消息通知房间创建者
	 */
	export class RemoveRoomCmd_Brd {
		/**
		 * 房间解散 给房主推送该通知时 带上其当前房卡数量
		 */
		card: number;
		GetType(): string { return 'Cmd.RemoveRoomCmd_Brd'; }
	}
	/**
	 * 创建的房间已被其他四个玩家玩了 则推送一条消息给玩家 通知其 当前可创建房间了
	 */
	export class CanCreateRoomCmd_Brd {
		/**
		 * 房间号
		 */
		roomId: number;
		/**
		 * 当前钻石
		 */
		diamond: number;
		GetType(): string { return 'Cmd.CanCreateRoomCmd_Brd'; }
	}
	export class SysMessageMahjongLobbyCmd_S {
		desc: string;
		/**
		 * 消息级别和位置相关  null/1  中度提示条、弹框确定
		 */
		pos: number;
		/**
		 * 要打开的窗口id
		 */
		openWindow: number;
		GetType(): string { return 'Cmd.SysMessageMahjongLobbyCmd_S'; }
	}
	/**
	 * 请求续局
	 */
	export class ApplyContinuePlayRoomCmd_C {
		GetType(): string { return 'Cmd.ApplyContinuePlayRoomCmd_C'; }
	}
	export class ApplyContinuePlayRoomCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ApplyContinuePlayRoomCmd_S'; }
	}
	/**
	 * 续局请求广播
	 */
	export class ApplyContinuePlayRoomCmd_Brd {
		/**
		 * 续局的具体数据 可要可不要
		 */
		desc: string;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 续局发起者
		 */
		owner: string;
		GetType(): string { return 'Cmd.ApplyContinuePlayRoomCmd_Brd'; }
	}
	/**
	 * 请求播放录像
	 */
	export class RequestRecordLobbyCmd_C {
		/**
		 * 全局唯一的房间id
		 */
		globalRoomId: number;
		/**
		 * 如果没有穿globalid,就用roomid反射成globalid,有可能重复,但是先忽略
		 */
		roomId: number;
		/**
		 * 第几局
		 */
		curGameNbr: number;
		/**
		 * globalRoomId:curGameNbr,兼容方式跑起来
		 */
		recordStr: string;
		GetType(): string { return 'Cmd.RequestRecordLobbyCmd_C'; }
	}
	/**
	 * 返回播放录像
	 */
	export class ReturnRecordLobbyCmd_S {
		/**
		 * 录像数据
		 */
		data: string;
		/**
		 * 需要返回gameid,客户端要找
		 */
		gameId: number;
		/**
		 * 主视角uid
		 */
		uid: number;
		/**
		 * 返回码 成功不返回,错误返回非0
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ReturnRecordLobbyCmd_S'; }
	}
	/**
	 * 请求暂停录像
	 */
	export class RequestPauseRecordRoomCmd_C {
		/**
		 * 1表示暂停,2表示继续
		 */
		pause: number;
		GetType(): string { return 'Cmd.RequestPauseRecordRoomCmd_C'; }
	}
	/**
	 * 请求进退录像
	 */
	export class RequestStepRecordRoomCmd_C {
		/**
		 * 负数表示后退,正数表示钱进
		 */
		step: number;
		GetType(): string { return 'Cmd.RequestStepRecordRoomCmd_C'; }
	}
	/**
	 * 请求退出录像
	 */
	export class RequestStopRecordRoomCmd_C {
		GetType(): string { return 'Cmd.RequestStopRecordRoomCmd_C'; }
	}
	/**
	 *  比赛场--------------------------------------------------------------------------------------------
	 *  排名信息
	 */
	export class OrderInfo {
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 姓名
		 */
		name: string;
		/**
		 * 分数
		 */
		score: number;
		GetType(): string { return 'Cmd.OrderInfo'; }
	}
	/**
	 * 比赛信息
	 */
	export class EventInfo {
		/**
		 * 赛事id
		 */
		eventid: number;
		/**
		 * 当前人数
		 */
		userNbr: number;
		/**
		 * 倒计时,0表示人满赛
		 */
		leftTime: number;
		/**
		 * 0表示报名阶段,1表示比赛阶段,2表示结束
		 */
		state: number;
		/**
		 * 本人状态0表示未报名,1表示已报名
		 */
		myState: number;
		/**
		 * 本人名次
		 */
		myOrder: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * 排名信息
		 */
		orderList: OrderInfo[];
		GetType(): string { return 'Cmd.EventInfo'; }
	}
	/**
	 * 请求查看当前赛事
	 */
	export class RequestListEventCmd_C {
		GetType(): string { return 'Cmd.RequestListEventCmd_C'; }
	}
	/**
	 * 返回请求查看当前赛事
	 */
	export class ReturnListEventCmd_S {
		/**
		 * 赛事列表
		 */
		eventList: EventInfo[];
		GetType(): string { return 'Cmd.ReturnListEventCmd_S'; }
	}
	/**
	 * 申请加入一个赛事
	 */
	export class RequestJoinEventCmd_C {
		/**
		 * 赛事id
		 */
		eventid: number;
		GetType(): string { return 'Cmd.RequestJoinEventCmd_C'; }
	}
	/**
	 * 申请参加加赛事返回
	 */
	export class ReturnJoinEventCmd_S {
		/**
		 * 赛事id
		 */
		eventid: number;
		/**
		 * 1表示成功报名
		 */
		result: number;
		GetType(): string { return 'Cmd.ReturnJoinEventCmd_S'; }
	}
	/**
	 * 申请退出一个赛事
	 */
	export class RequestExitEventCmd_C {
		/**
		 * 赛事id
		 */
		eventid: number;
		GetType(): string { return 'Cmd.RequestExitEventCmd_C'; }
	}
	/**
	 * 申请退出一个赛事返回
	 */
	export class ReturnExitEventCmd_S {
		/**
		 * 赛事id
		 */
		eventid: number;
		/**
		 * 1表示成功退出
		 */
		result: number;
		GetType(): string { return 'Cmd.ReturnExitEventCmd_S'; }
	}
	/**
	 * 请求查看当前赛事
	 */
	export class RequestDetailEventCmd_C {
		/**
		 * 赛事id
		 */
		eventid: number;
		GetType(): string { return 'Cmd.RequestDetailEventCmd_C'; }
	}
	/**
	 * 刷新某个赛事情况
	 */
	export class RefreshEventCmd_S {
		/**
		 * 赛事
		 */
		info: EventInfo;
		GetType(): string { return 'Cmd.RefreshEventCmd_S'; }
	}
	/**
	 * 返回某个赛事结果
	 */
	export class ReturnEventResultCmd_S {
		/**
		 * 赛事
		 */
		info: EventInfo;
		/**
		 * 晋级状态 1.晋级 0.淘汰
		 */
		promotionState: number;
		GetType(): string { return 'Cmd.ReturnEventResultCmd_S'; }
	}
	/**
	 * 刷新某个赛事人数
	 */
	export class RefreshUesrNbrEventCmd_Brd {
		/**
		 * 赛事id
		 */
		eventid: number;
		/**
		 * 当前人数
		 */
		userNbr: number;
		GetType(): string { return 'Cmd.RefreshUesrNbrEventCmd_Brd'; }
	}
	/**
	 * 刷新某个赛事状态
	 */
	export class RefreshStateEventCmd_Brd {
		/**
		 * 赛事id
		 */
		eventid: number;
		/**
		 * 0表示报名阶段,1表示比赛阶段,2表示结束
		 */
		state: number;
		GetType(): string { return 'Cmd.RefreshStateEventCmd_Brd'; }
	}
	/**
	 *  匹配号相关协议--------------------------------------------------------------------------------------------
	 *  请求创建匹配组
	 */
	export class CreateMatchGroupCmd_C {
		/**
		 * 房间信息
		 */
		createRoom: CreateRoomCmd_C;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单
		 */
		type: number;
		/**
		 * 最小开局人数,到达人数就开始倒计时
		 */
		minNum: number;
		/**
		 * 最大开局人数,到达人数就直接匹配一桌
		 */
		maxNum: number;
		/**
		 * 是否需要授权,1表示需要
		 */
		needAgree: number;
		/**
		 * 匹配号到达基础人数后的倒计时,秒,0表示用不
		 */
		countDownSec: number;
		/**
		 * 匹配号的生存时间,秒,0表示用不
		 */
		lifeTimeSec: number;
		/**
		 * 匹配类型,空或0是常规模式,1是淘汰赛模式MatchGroupType
		 */
		matchType: number;
		/**
		 * 允许客户端选择优质id作为匹配号
		 */
		roomId: number;
		/**
		 * 需要钻石
		 */
		needDiamond: number;
		/**
		 * 最多开房数
		 */
		maxRoomNum: number;
		/**
		 * 1表示茶馆模式
		 */
		teaHouse: number;
		/**
		 * 副管理员ID
		 */
		otherManagerId: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 上下分
		 */
		minMatchPoint: number;
		GetType(): string { return 'Cmd.CreateMatchGroupCmd_C'; }
	}
	/**
	 * 给匹配号创建个新房间,茶馆用,等待别人选座加入
	 */
	export class CreateRoomMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.CreateRoomMatchGroupCmd_C'; }
	}
	/**
	 * 删除匹配号里的房间
	 */
	export class DeleteRoomMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 房间id
		 */
		roomId: number;
		GetType(): string { return 'Cmd.DeleteRoomMatchGroupCmd_C'; }
	}
	/**
	 * 设置玩家匹配分
	 */
	export class ChangeMatchPointMatchGroupCmd_CS {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 上下分
		 */
		matchPoint: number;
		GetType(): string { return 'Cmd.ChangeMatchPointMatchGroupCmd_CS'; }
	}
	/**
	 * 设置玩家备注
	 */
	export class ChangeMatchDescMatchGroupCmd_CS {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 备注
		 */
		desc: string;
		GetType(): string { return 'Cmd.ChangeMatchDescMatchGroupCmd_CS'; }
	}
	/**
	 * 改变匹配号属性
	 */
	export class RequestChangeMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestChangeMatchGroupCmd_C'; }
	}
	/**
	 * 改变匹配号属性
	 */
	export class ChangeMatchGroupCmd_C {
		/**
		 * 房间信息
		 */
		createRoom: CreateRoomCmd_C;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单
		 */
		type: number;
		/**
		 * 最小开局人数,到达人数就开始倒计时
		 */
		minNum: number;
		/**
		 * 最大开局人数,到达人数就直接匹配一桌
		 */
		maxNum: number;
		/**
		 * 是否需要授权,1表示需要
		 */
		needAgree: number;
		/**
		 * 匹配号到达基础人数后的倒计时,秒,0表示用不
		 */
		countDownSec: number;
		/**
		 * 匹配号的生存时间,秒,0表示用不
		 */
		lifeTimeSec: number;
		/**
		 * 匹配类型,空或0是常规模式,1是淘汰赛模式MatchGroupType
		 */
		matchType: number;
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 需要钻石
		 */
		needDiamond: number;
		/**
		 * 最多开房数
		 */
		maxRoomNum: number;
		/**
		 * 副管理员ID
		 */
		otherManagerId: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 是否公开数据
		 */
		public: number;
		/**
		 * 上下分
		 */
		minMatchPoint: number;
		GetType(): string { return 'Cmd.ChangeMatchGroupCmd_C'; }
	}
	/**
	 * 改变匹配号属性
	 */
	export class ChangeMatchGroupCmd_S {
		/**
		 * 房间信息
		 */
		createRoom: CreateRoomCmd_C;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单
		 */
		type: number;
		/**
		 * 最小开局人数,到达人数就开始倒计时
		 */
		minNum: number;
		/**
		 * 最大开局人数,到达人数就直接匹配一桌
		 */
		maxNum: number;
		/**
		 * 是否需要授权,1表示需要
		 */
		needAgree: number;
		/**
		 * 匹配号到达基础人数后的倒计时,秒,0表示用不
		 */
		countDownSec: number;
		/**
		 * 匹配号的生存时间,秒,0表示用不
		 */
		lifeTimeSec: number;
		/**
		 * 匹配类型,空或0是常规模式,1是淘汰赛模式MatchGroupType
		 */
		matchType: number;
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 需要钻石
		 */
		needDiamond: number;
		/**
		 * 最多开房数
		 */
		maxRoomNum: number;
		/**
		 * 副管理员ID
		 */
		otherManagerId: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 是否公开数据
		 */
		public: number;
		/**
		 * 上下分
		 */
		minMatchPoint: number;
		GetType(): string { return 'Cmd.ChangeMatchGroupCmd_S'; }
	}
	/**
	 * 请求参与玩家的列表
	 */
	export class PlayedListMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.PlayedListMatchGroupCmd_C'; }
	}
	/**
	 * 返回参与玩家的列表,里面包括了玩家的输赢清空,搞活动用
	 */
	export class PlayedListMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 成员信息
		 */
		list: MatchGroupMemberInfo[];
		GetType(): string { return 'Cmd.PlayedListMatchGroupCmd_S'; }
	}
	/**
	 * 清空与玩家的列表 返回PlayedListMatchGroupCmd_S
	 */
	export class ClearPlayedListMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.ClearPlayedListMatchGroupCmd_C'; }
	}
	/**
	 * 匹配组信息
	 */
	export class MathGroup {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * gameGatewayUrl,尽量让玩家跟房主一个url,防止被攻击
		 */
		url: string;
		/**
		 * 匹配组主人ID
		 */
		ownerid: number;
		/**
		 * 匹配组主人名称
		 */
		ownername: string;
		/**
		 * 本匹配号所产生的所有房间号
		 */
		roomList: MathGroupRoomInfo[];
		/**
		 * 状态,0表示正常,1表示停止进人(终止)
		 */
		state: number;
		/**
		 * 接客倒计时
		 */
		lifeTimeSec: number;
		/**
		 * 销毁倒计时
		 */
		delTimeSec: number;
		/**
		 * 排队人数
		 */
		waitUserNum: number;
		/**
		 * 游戏人数
		 */
		gameingUserNum: number;
		/**
		 * 当前轮数,赛事用
		 */
		step: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 副匹配主id
		 */
		masterid: string;
		/**
		 * 是否公开数据
		 */
		public: number;
		/**
		 * 排队中的成员信息
		 */
		waitUserList: MatchGroupMemberInfo[];
		/**
		 * 最大局数
		 */
		gameNbr: number;
		/**
		 * 最大房间内人数
		 */
		userNbr: number;
		GetType(): string { return 'Cmd.MathGroup'; }
	}
	/**
	 * 请求等待列表
	 */
	export class WaitUserListMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.WaitUserListMatchGroupCmd_C'; }
	}
	/**
	 * 请求等待列表
	 */
	export class WaitUserListMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 排队中的成员信息
		 */
		waitUserList: MatchGroupMemberInfo[];
		/**
		 * 当前局数
		 */
		curGameNbr: number;
		GetType(): string { return 'Cmd.WaitUserListMatchGroupCmd_S'; }
	}
	/**
	 * 匹配开启倒计时
	 */
	export class StartCountDownMatchGroupCmd_Brd {
		/**
		 * 倒计时秒数
		 */
		sec: number;
		GetType(): string { return 'Cmd.StartCountDownMatchGroupCmd_Brd'; }
	}
	/**
	 * 创建匹配组返回
	 */
	export class CreateMatchGroupCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 自己创建的所有匹配号
		 */
		curMath: MathGroup;
		/**
		 * 自己创建的所有匹配号
		 */
		matchIdList: number[];
		GetType(): string { return 'Cmd.CreateMatchGroupCmd_S'; }
	}
	/**
	 * 请求自己的所有匹配号,并且选中其中一个
	 */
	export class RequestMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestMatchGroupCmd_C'; }
	}
	/**
	 * 返回自己的所有匹配号
	 */
	export class ReturnMatchGroupCmd_S {
		/**
		 * 自己创建的所有匹配号
		 */
		curMath: MathGroup;
		/**
		 * 自己创建的所有匹配号
		 */
		matchIdList: number[];
		GetType(): string { return 'Cmd.ReturnMatchGroupCmd_S'; }
	}
	/**
	 * 请求黑白名单
	 */
	export class RequestMemberInfoMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestMemberInfoMatchGroupCmd_C'; }
	}
	/**
	 * 返回黑白名单
	 */
	export class ReturnMemberInfoMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		whitelist: MatchGroupMemberInfo[];
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		blacklist: MatchGroupMemberInfo[];
		GetType(): string { return 'Cmd.ReturnMemberInfoMatchGroupCmd_S'; }
	}
	/**
	 * 请求终止匹配号
	 */
	export class OperateMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 状态,0表示正常,1表示停止进人(终止)
		 */
		state: number;
		GetType(): string { return 'Cmd.OperateMatchGroupCmd_C'; }
	}
	/**
	 * 请求删除匹配号
	 */
	export class RequestDeleteMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestDeleteMatchGroupCmd_C'; }
	}
	/**
	 * 请求删除某匹配号战绩
	 */
	export class RequestDelHistoryMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 房间号
		 */
		roomId: number;
		GetType(): string { return 'Cmd.RequestDelHistoryMatchGroupCmd_C'; }
	}
	/**
	 * 回应删除某匹配号战绩
	 */
	export class ReturnDelHistoryMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 房间号
		 */
		roomId: number;
		GetType(): string { return 'Cmd.ReturnDelHistoryMatchGroupCmd_S'; }
	}
	/**
	 * 申请游客模式切换
	 */
	export class ChangeMatchTypeMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单
		 */
		type: number;
		GetType(): string { return 'Cmd.ChangeMatchTypeMatchGroupCmd_C'; }
	}
	/**
	 * 申请白名单消息列表,玩家请求后主动推给匹配主
	 */
	export class JoinMemberListMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		list: MatchGroupMemberInfo[];
		GetType(): string { return 'Cmd.JoinMemberListMatchGroupCmd_S'; }
	}
	/**
	 * 有玩家申请加入时给匹配主一个弹窗,返回ReplyJoinMemberListMatchGroupCmd_C
	 */
	export class RequestJoinMemberMatchGroupCmd_S {
		matchId: number;
		uid: number;
		nickname: string;
		/**
		 * 服务器间用
		 */
		ownerid: number;
		GetType(): string { return 'Cmd.RequestJoinMemberMatchGroupCmd_S'; }
	}
	/**
	 * 匹配主,回应申请白名单消息列表
	 */
	export class ReplyJoinMemberListMatchGroupCmd_C {
		matchId: number;
		uid: number;
		/**
		 * 0表示拒绝,1表示同意,2表示白名单,3表示黑名单
		 */
		reply: number;
		/**
		 * 服务器间用
		 */
		ownerid: number;
		GetType(): string { return 'Cmd.ReplyJoinMemberListMatchGroupCmd_C'; }
	}
	/**
	 * 匹配主,请求黑白名单操作
	 */
	export class OperateMemberListMatchGroupCmd_C {
		uid: number;
		/**
		 * 0表示删除,1表示黑白名单互转,2表示添加白名单,3表示添加黑名单
		 */
		reply: number;
		matchId: number;
		GetType(): string { return 'Cmd.OperateMemberListMatchGroupCmd_C'; }
	}
	/**
	 * 匹配主,请求黄名单操作
	 */
	export class SetVipMemberListMatchGroupCmd_C {
		uid: number;
		/**
		 * 0表示取消vip,1表示设置vip
		 */
		vip: number;
		matchId: number;
		GetType(): string { return 'Cmd.SetVipMemberListMatchGroupCmd_C'; }
	}
	/**
	 * 匹配主,请求黄名单操作
	 */
	export class OperateYellowMemberListMatchGroupCmd_C {
		uid: number;
		uid2: number;
		/**
		 * 0表示删除,1表示添加
		 */
		reply: number;
		matchId: number;
		GetType(): string { return 'Cmd.OperateYellowMemberListMatchGroupCmd_C'; }
	}
	/**
	 * 请求黄名单
	 */
	export class RequestYellowMemberInfoMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestYellowMemberInfoMatchGroupCmd_C'; }
	}
	export class YellowMemberInfo {
		uid: number;
		nickName: string;
		uid2: number;
		nickName2: string;
		GetType(): string { return 'Cmd.YellowMemberInfo'; }
	}
	/**
	 * 返回黄名单
	 */
	export class ReturnYellowMemberInfoMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 黄名单列表
		 */
		list: YellowMemberInfo[];
		GetType(): string { return 'Cmd.ReturnYellowMemberInfoMatchGroupCmd_S'; }
	}
	/**
	 * 请求离开匹配组
	 */
	export class LeaveMatchGroupCmd_C {
		GetType(): string { return 'Cmd.LeaveMatchGroupCmd_C'; }
	}
	/**
	 * 离开匹配组返回
	 */
	export class LeaveMatchGroupCmd_S {
		GetType(): string { return 'Cmd.LeaveMatchGroupCmd_S'; }
	}
	/**
	 * 离开匹配组返回广播
	 */
	export class LeaveMatchGroupCmd_Brd {
		uid: number;
		GetType(): string { return 'Cmd.LeaveMatchGroupCmd_Brd'; }
	}
	/**
	 * 普通玩家请求茶馆里的房间
	 */
	export class RequestRoomMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestRoomMatchGroupCmd_C'; }
	}
	/**
	 * 普通玩家请求茶馆里的房间返回
	 */
	export class ReturnRoomMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 本匹配号所产生的所有房间号
		 */
		roomList: MathGroupRoomInfo[];
		/**
		 * 0：没加入桌子权限 ， 1：正在申请。 2：获得加入权限
		 */
		state: number;
		nickName: string;
		ownerid: number;
		/**
		 * 分享数据,ActiveCreateRoomCmd_C时用,山寨下
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * 最大房间内人数
		 */
		userNbr: number;
		GetType(): string { return 'Cmd.ReturnRoomMatchGroupCmd_S'; }
	}
	/**
	 * 请求进入匹配组
	 */
	export class EnterMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 進入房间需要带上lobbyId（指定房間id可能不是該大廳的）
		 */
		lobbyId: number;
		/**
		 * 房间id,如果不填就排队,填了直接进入,茶馆用
		 */
		roomId: number;
		GetType(): string { return 'Cmd.EnterMatchGroupCmd_C'; }
	}
	/**
	 * 匹配组成员信息
	 */
	export class MatchGroupMemberInfo {
		uid: number;
		nickname: string;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单
		 */
		type: number;
		/**
		 * 状态,OnlineState
		 */
		state: number;
		/**
		 * 积分
		 */
		score: number;
		/**
		 * 申请加入时使用,冗余
		 */
		matchId: number;
		/**
		 * 头像url,茶馆要用
		 */
		headUrl: string;
		/**
		 * 输次
		 */
		loseNum: number;
		/**
		 * 赢次
		 */
		winNum: number;
		/**
		 * VIP等级
		 */
		vip: number;
		/**
		 * 当天大赢次
		 */
		bigWinNum: number;
		/**
		 * 总上桌次数
		 */
		playNum: number;
		/**
		 * 昨日积分
		 */
		lastScore: number;
		/**
		 * 上下分
		 */
		matchPoint: number;
		/**
		 * 成长属性,西安先用
		 */
		growth: Cmd.GrowthAttr;
		/**
		 * 本周积分
		 */
		scoreWeek: number;
		/**
		 * 本月积分
		 */
		scoreMon: number;
		/**
		 * 总积分
		 */
		scoreAll: number;
		/**
		 * 备注
		 */
		desc: string;
		GetType(): string { return 'Cmd.MatchGroupMemberInfo'; }
	}
	/**
	 * 匹配组房间信息
	 */
	export class MathGroupRoomInfo {
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 成员信息
		 */
		list: MatchGroupMemberInfo[];
		/**
		 * 开启时间unix sec
		 */
		beginTime: number;
		/**
		 * 结束时间unix sec
		 */
		endTime: number;
		/**
		 * 当前局数
		 */
		curGameNbr: number;
		/**
		 * 最大局数
		 */
		gameNbr: number;
		/**
		 * 游戏id
		 */
		gameId: number;
		/**
		 * 分享数据,ActiveCreateRoomCmd_C时用,山寨下
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * 当前房间内人数
		 */
		curUserNbr: number;
		/**
		 * 最大房间内人数
		 */
		userNbr: number;
		/**
		 * globalRoomId
		 */
		gid: number;
		/**
		 * 不填或0表示准备中,1表示已开局,2表示已结束
		 */
		state: number;
		GetType(): string { return 'Cmd.MathGroupRoomInfo'; }
	}
	/**
	 * 请求进入匹配组返回
	 */
	export class EnterMatchGroupCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * gameGatewayUrl,尽量让玩家跟房主一个url,防止被攻击
		 */
		url: string;
		/**
		 * 匹配组主人ID
		 */
		ownerid: number;
		/**
		 * 匹配组主人名称
		 */
		ownername: string;
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: MatchGroupMemberInfo[];
		/**
		 * 离上一桌匹配成功的时间间隔
		 */
		lastStartSec: number;
		/**
		 * 红包雨倒计时
		 */
		leftRedPackSec: number;
		GetType(): string { return 'Cmd.EnterMatchGroupCmd_S'; }
	}
	/**
	 * 广播匹配组成员
	 */
	export class EnterMatchGroupCmd_Brd {
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		info: MatchGroupMemberInfo;
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: MatchGroupMemberInfo[];
		/**
		 * 分享数据,为了改变人数,这里冗余下
		 */
		shareInfo: Cmd.ShareInfo;
		GetType(): string { return 'Cmd.EnterMatchGroupCmd_Brd'; }
	}
	/**
	 * 匹配组信息
	 */
	export class MatchGroupInfo {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 匹配号名字
		 */
		ownerName: string;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 当前参与活动人数
		 */
		curUserNbr: number;
		/**
		 * 微信联系方式
		 */
		wechat: string;
		/**
		 * 上下分
		 */
		matchPoint: number;
		GetType(): string { return 'Cmd.MatchGroupInfo'; }
	}
	/**
	 * 请求进入过的历史匹配组列表
	 */
	export class HistoryMatchIdListMatchGroupCmd_C {
		GetType(): string { return 'Cmd.HistoryMatchIdListMatchGroupCmd_C'; }
	}
	/**
	 * 返回进入过的历史匹配组列表
	 */
	export class HistoryMatchIdListMatchGroupCmd_S {
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: MatchGroupInfo[];
		GetType(): string { return 'Cmd.HistoryMatchIdListMatchGroupCmd_S'; }
	}
	/**
	 * 请求添加匹配组列表
	 */
	export class RequestAddPublicMatchIdMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 微信号
		 */
		wechat: string;
		GetType(): string { return 'Cmd.RequestAddPublicMatchIdMatchGroupCmd_C'; }
	}
	/**
	 * 请求官方匹配组列表
	 */
	export class PublicMatchIdListMatchGroupCmd_C {
		GetType(): string { return 'Cmd.PublicMatchIdListMatchGroupCmd_C'; }
	}
	/**
	 * 官方匹配组列表
	 */
	export class PublicMatchIdListMatchGroupCmd_S {
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: MatchGroupInfo[];
		GetType(): string { return 'Cmd.PublicMatchIdListMatchGroupCmd_S'; }
	}
	/**
	 * 请求添加冠名赛--等待未完成
	 */
	export class RequestAddOfficialMatchIdMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 微信号
		 */
		wechat: string;
		GetType(): string { return 'Cmd.RequestAddOfficialMatchIdMatchGroupCmd_C'; }
	}
	/**
	 * 请求冠名赛列表
	 */
	export class OfficialMatchIdListMatchGroupCmd_C {
		GetType(): string { return 'Cmd.OfficialMatchIdListMatchGroupCmd_C'; }
	}
	/**
	 * 冠名赛列表
	 */
	export class OfficialMatchIdListMatchGroupCmd_S {
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: MatchGroupInfo[];
		GetType(): string { return 'Cmd.OfficialMatchIdListMatchGroupCmd_S'; }
	}
	/**
	 * 刷新匹配组信息
	 */
	export class RefreshMatchGroupCmd_Brd {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 剩余开局秒数,0表示还未开始倒计时
		 */
		leftTime: number;
		/**
		 * 当前排队人数
		 */
		curNum: number;
		/**
		 * 最大排队人数
		 */
		maxNum: number;
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: MatchGroupMemberInfo[];
		GetType(): string { return 'Cmd.RefreshMatchGroupCmd_Brd'; }
	}
	/**
	 *  匹配场(金币场)--------------------------------------------------------------------------------------------
	 *  进入某一匹配场
	 */
	export class EnterMatchRoomCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 返回当前创建的房间号 所对应的游戏id
		 */
		gameId: number;
		/**
		 * 场次id
		 */
		scene: number;
		/**
		 * 匹配场 对赌类型 1/2 金币／钻石(暂时可不传 预留)
		 */
		gambleType: number;
		GetType(): string { return 'Cmd.EnterMatchRoomCmd_C'; }
	}
	/**
	 * 客家棋牌活动 推荐排行榜--------------------------------------------------------------------------------------------
	 */
	export class InviteRankInfo {
		uid: number;
		nickName: string;
		num: number;
		/**
		 * 头像url
		 */
		headUrl: string;
		GetType(): string { return 'Cmd.InviteRankInfo'; }
	}
	export class IntoInviteRankLobbyCmd_C {
		GetType(): string { return 'Cmd.IntoInviteRankLobbyCmd_C'; }
	}
	export class IntoInviteRankLobbyCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		infos: InviteRankInfo[];
		myNum: number;
		GetType(): string { return 'Cmd.IntoInviteRankLobbyCmd_S'; }
	}
	/**
	 * 好彩真人麻将，进入房间之前的判断
	 */
	export class GamePara {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 返回当前创建的房间号 所对应的游戏id
		 */
		gameId: number;
		/**
		 * 场次id
		 */
		scene: number;
		/**
		 * 匹配场 对赌类型 1/2 金币／钻石(暂时可不传 预留)
		 */
		gambleType: number;
		GetType(): string { return 'Cmd.GamePara'; }
	}
	export class JudgeEnterGameLobbyCmd_C {
		/**
		 * 1匹配场  2百人场 3百人场体验场
		 */
		enter: number;
		/**
		 * 房间相关参数
		 */
		gamePara: GamePara;
		GetType(): string { return 'Cmd.JudgeEnterGameLobbyCmd_C'; }
	}
	export class JudgeEnterGameLobbyCmd_S {
		resultCode: number;
		/**
		 * 之前所在房间的游戏类型 1匹配场  2百人场
		 */
		enter: number;
		/**
		 * 房间相关参数
		 */
		gamePara: GamePara;
		GetType(): string { return 'Cmd.JudgeEnterGameLobbyCmd_S'; }
	}
	/**
	 * 好彩真人麻将，返回之前的游戏
	 */
	export class ReturnHaoCaiGameLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.ReturnHaoCaiGameLobbyCmd_C'; }
	}
	export class ReturnHaoCaiGameLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.ReturnHaoCaiGameLobbyCmd_S'; }
	}
}
